// Code generated by goyacc -o sql.go .\sql.y. DO NOT EDIT.

//line .\sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line .\sql.y:19

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line .\sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const VALUES = 57379
const LAST_INSERT_ID = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const SQL_CALC_FOUND_ROWS = 57387
const JOIN = 57388
const STRAIGHT_JOIN = 57389
const LEFT = 57390
const RIGHT = 57391
const INNER = 57392
const OUTER = 57393
const CROSS = 57394
const NATURAL = 57395
const USE = 57396
const FORCE = 57397
const ON = 57398
const USING = 57399
const ID = 57400
const AT_ID = 57401
const AT_AT_ID = 57402
const HEX = 57403
const STRING = 57404
const INTEGRAL = 57405
const FLOAT = 57406
const HEXNUM = 57407
const VALUE_ARG = 57408
const LIST_ARG = 57409
const COMMENT = 57410
const COMMENT_KEYWORD = 57411
const BIT_LITERAL = 57412
const NULL = 57413
const TRUE = 57414
const FALSE = 57415
const OFF = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const SHIFT_LEFT = 57435
const SHIFT_RIGHT = 57436
const DIV = 57437
const MOD = 57438
const UNARY = 57439
const COLLATE = 57440
const BINARY = 57441
const UNDERSCORE_BINARY = 57442
const UNDERSCORE_UTF8MB4 = 57443
const UNDERSCORE_UTF8 = 57444
const UNDERSCORE_LATIN1 = 57445
const INTERVAL = 57446
const JSON_EXTRACT_OP = 57447
const JSON_UNQUOTE_EXTRACT_OP = 57448
const CREATE = 57449
const ALTER = 57450
const DROP = 57451
const RENAME = 57452
const ANALYZE = 57453
const ADD = 57454
const FLUSH = 57455
const SCHEMA = 57456
const TABLE = 57457
const INDEX = 57458
const VIEW = 57459
const TO = 57460
const IGNORE = 57461
const IF = 57462
const UNIQUE = 57463
const PRIMARY = 57464
const COLUMN = 57465
const SPATIAL = 57466
const FULLTEXT = 57467
const KEY_BLOCK_SIZE = 57468
const CHECK = 57469
const INDEXES = 57470
const ACTION = 57471
const CASCADE = 57472
const CONSTRAINT = 57473
const FOREIGN = 57474
const NO = 57475
const REFERENCES = 57476
const RESTRICT = 57477
const SHOW = 57478
const DESCRIBE = 57479
const EXPLAIN = 57480
const DATE = 57481
const ESCAPE = 57482
const REPAIR = 57483
const OPTIMIZE = 57484
const TRUNCATE = 57485
const MAXVALUE = 57486
const PARTITION = 57487
const REORGANIZE = 57488
const LESS = 57489
const THAN = 57490
const PROCEDURE = 57491
const TRIGGER = 57492
const VINDEX = 57493
const VINDEXES = 57494
const STATUS = 57495
const VARIABLES = 57496
const WARNINGS = 57497
const SEQUENCE = 57498
const BEGIN = 57499
const START = 57500
const TRANSACTION = 57501
const COMMIT = 57502
const ROLLBACK = 57503
const SAVEPOINT = 57504
const RELEASE = 57505
const WORK = 57506
const BIT = 57507
const TINYINT = 57508
const SMALLINT = 57509
const MEDIUMINT = 57510
const INT = 57511
const INTEGER = 57512
const BIGINT = 57513
const INTNUM = 57514
const REAL = 57515
const DOUBLE = 57516
const FLOAT_TYPE = 57517
const DECIMAL = 57518
const NUMERIC = 57519
const TIME = 57520
const TIMESTAMP = 57521
const DATETIME = 57522
const YEAR = 57523
const CHAR = 57524
const VARCHAR = 57525
const BOOL = 57526
const CHARACTER = 57527
const VARBINARY = 57528
const NCHAR = 57529
const TEXT = 57530
const TINYTEXT = 57531
const MEDIUMTEXT = 57532
const LONGTEXT = 57533
const BLOB = 57534
const TINYBLOB = 57535
const MEDIUMBLOB = 57536
const LONGBLOB = 57537
const JSON = 57538
const ENUM = 57539
const GEOMETRY = 57540
const POINT = 57541
const LINESTRING = 57542
const POLYGON = 57543
const GEOMETRYCOLLECTION = 57544
const MULTIPOINT = 57545
const MULTILINESTRING = 57546
const MULTIPOLYGON = 57547
const NULLX = 57548
const AUTO_INCREMENT = 57549
const APPROXNUM = 57550
const SIGNED = 57551
const UNSIGNED = 57552
const ZEROFILL = 57553
const COLLATION = 57554
const DATABASES = 57555
const TABLES = 57556
const VITESS_METADATA = 57557
const VSCHEMA = 57558
const FULL = 57559
const PROCESSLIST = 57560
const COLUMNS = 57561
const FIELDS = 57562
const ENGINES = 57563
const PLUGINS = 57564
const EXTENDED = 57565
const NAMES = 57566
const CHARSET = 57567
const GLOBAL = 57568
const SESSION = 57569
const ISOLATION = 57570
const LEVEL = 57571
const READ = 57572
const WRITE = 57573
const ONLY = 57574
const REPEATABLE = 57575
const COMMITTED = 57576
const UNCOMMITTED = 57577
const SERIALIZABLE = 57578
const CURRENT_TIMESTAMP = 57579
const DATABASE = 57580
const CURRENT_DATE = 57581
const CURRENT_TIME = 57582
const LOCALTIME = 57583
const LOCALTIMESTAMP = 57584
const UTC_DATE = 57585
const UTC_TIME = 57586
const UTC_TIMESTAMP = 57587
const REPLACE = 57588
const CONVERT = 57589
const CAST = 57590
const SUBSTR = 57591
const SUBSTRING = 57592
const GROUP_CONCAT = 57593
const SEPARATOR = 57594
const TIMESTAMPADD = 57595
const TIMESTAMPDIFF = 57596
const MATCH = 57597
const AGAINST = 57598
const BOOLEAN = 57599
const LANGUAGE = 57600
const WITH = 57601
const QUERY = 57602
const EXPANSION = 57603
const ANY = 57604
const SOME = 57605
const UNUSED = 57606
const ARRAY = 57607
const CUME_DIST = 57608
const DESCRIPTION = 57609
const DENSE_RANK = 57610
const EMPTY = 57611
const EXCEPT = 57612
const FIRST_VALUE = 57613
const GROUPING = 57614
const GROUPS = 57615
const JSON_TABLE = 57616
const LAG = 57617
const LAST_VALUE = 57618
const LATERAL = 57619
const LEAD = 57620
const MEMBER = 57621
const NTH_VALUE = 57622
const NTILE = 57623
const OF = 57624
const OVER = 57625
const PERCENT_RANK = 57626
const RANK = 57627
const RECURSIVE = 57628
const ROW_NUMBER = 57629
const SYSTEM = 57630
const WINDOW = 57631
const ACTIVE = 57632
const ADMIN = 57633
const BUCKETS = 57634
const CLONE = 57635
const COMPONENT = 57636
const DEFINITION = 57637
const ENFORCED = 57638
const EXCLUDE = 57639
const FOLLOWING = 57640
const GEOMCOLLECTION = 57641
const GET_MASTER_PUBLIC_KEY = 57642
const HISTOGRAM = 57643
const HISTORY = 57644
const INACTIVE = 57645
const INVISIBLE = 57646
const LOCKED = 57647
const MASTER_COMPRESSION_ALGORITHMS = 57648
const MASTER_PUBLIC_KEY_PATH = 57649
const MASTER_TLS_CIPHERSUITES = 57650
const MASTER_ZSTD_COMPRESSION_LEVEL = 57651
const NESTED = 57652
const NETWORK_NAMESPACE = 57653
const NOWAIT = 57654
const NULLS = 57655
const OJ = 57656
const OLD = 57657
const OPTIONAL = 57658
const ORDINALITY = 57659
const ORGANIZATION = 57660
const OTHERS = 57661
const PATH = 57662
const PERSIST = 57663
const PERSIST_ONLY = 57664
const PRECEDING = 57665
const PRIVILEGE_CHECKS_USER = 57666
const PROCESS = 57667
const RANDOM = 57668
const REFERENCE = 57669
const REQUIRE_ROW_FORMAT = 57670
const RESOURCE = 57671
const RESPECT = 57672
const RESTART = 57673
const RETAIN = 57674
const REUSE = 57675
const ROLE = 57676
const SECONDARY = 57677
const SECONDARY_ENGINE = 57678
const SECONDARY_LOAD = 57679
const SECONDARY_UNLOAD = 57680
const SKIP = 57681
const SRID = 57682
const THREAD_PRIORITY = 57683
const TIES = 57684
const UNBOUNDED = 57685
const VCPU = 57686
const VISIBLE = 57687
const FORMAT = 57688
const TREE = 57689
const VITESS = 57690
const TRADITIONAL = 57691

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ANY",
	"SOME",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	33, 307,
	133, 307,
	145, 307,
	170, 321,
	171, 321,
	-2, 309,
	-1, 48,
	135, 331,
	-2, 329,
	-1, 72,
	39, 367,
	-2, 375,
	-1, 393,
	121, 701,
	-2, 697,
	-1, 394,
	121, 702,
	-2, 698,
	-1, 411,
	39, 368,
	-2, 380,
	-1, 412,
	39, 369,
	-2, 381,
	-1, 435,
	89, 957,
	-2, 74,
	-1, 436,
	89, 873,
	-2, 75,
	-1, 441,
	89, 840,
	-2, 663,
	-1, 443,
	89, 904,
	-2, 665,
	-1, 770,
	57, 56,
	59, 56,
	-2, 60,
	-1, 945,
	121, 704,
	-2, 700,
	-1, 1373,
	5, 622,
	17, 622,
	19, 622,
	31, 622,
	60, 622,
	-2, 406,
}

const yyPrivate = 57344

const yyLast = 17664

var yyAct = [...]int{
	393, 1602, 1412, 1569, 1300, 1612, 334, 1050, 1205, 1485,
	1518, 1353, 1225, 1386, 349, 693, 737, 1023, 363, 1206,
	1354, 1350, 598, 320, 1093, 1251, 1049, 1359, 1365, 1059,
	939, 1144, 1079, 1046, 1319, 1472, 440, 609, 91, 888,
	1277, 1268, 285, 869, 305, 285, 1020, 744, 1063, 1025,
	91, 783, 285, 404, 1009, 413, 747, 395, 742, 396,
	769, 763, 71, 3, 965, 782, 1073, 28, 398, 434,
	336, 1089, 764, 325, 911, 429, 69, 321, 285, 91,
	324, 567, 568, 285, 1002, 285, 332, 754, 67, 426,
	772, 72, 709, 897, 66, 587, 1605, 1589, 7, 710,
	6, 5, 283, 1193, 1600, 1112, 1577, 1597, 1413, 1588,
	1576, 1336, 316, 1442, 572, 607, 437, 1380, 970, 1111,
	1381, 1382, 1040, 74, 75, 76, 77, 78, 93, 94,
	95, 419, 1041, 1042, 784, 399, 785, 30, 428, 60,
	33, 34, 627, 569, 323, 571, 281, 277, 278, 279,
	322, 93, 94, 95, 273, 1239, 1259, 271, 1238, 275,
	1072, 1240, 1110, 1544, 655, 654, 664, 665, 657, 658,
	659, 660, 661, 662, 663, 656, 1302, 378, 666, 384,
	385, 382, 383, 381, 380, 379, 1475, 1080, 1433, 59,
	407, 622, 1431, 386, 387, 623, 620, 621, 313, 604,
	896, 606, 311, 315, 626, 625, 858, 93, 94, 95,
	615, 616, 857, 1304, 855, 1107, 1104, 1105, 1599, 1103,
	1596, 1570, 1299, 1320, 1003, 1064, 1562, 1620, 93, 94,
	95, 588, 1303, 603, 605, 1616, 942, 1226, 1228, 1519,
	1527, 612, 574, 275, 898, 899, 900, 859, 856, 1296,
	1305, 1066, 1114, 1117, 1521, 1298, 274, 862, 629, 1066,
	846, 1376, 1375, 1374, 1322, 570, 577, 288, 276, 1551,
	280, 1455, 285, 579, 580, 678, 679, 285, 272, 589,
	1235, 1198, 289, 285, 93, 94, 95, 1173, 982, 285,
	596, 292, 1109, 602, 91, 1152, 778, 584, 91, 299,
	91, 1324, 758, 1328, 1047, 1323, 91, 1321, 691, 594,
	1124, 666, 1326, 1123, 1108, 1036, 91, 91, 1163, 1227,
	889, 1325, 601, 1160, 656, 1520, 643, 666, 646, 883,
	893, 1575, 578, 297, 1327, 1329, 1560, 586, 600, 304,
	1545, 611, 646, 593, 645, 643, 640, 641, 1080, 595,
	1528, 1526, 1614, 613, 1113, 1615, 1065, 1613, 918, 81,
	1297, 646, 1295, 1536, 1065, 581, 1363, 582, 816, 290,
	583, 1115, 916, 917, 915, 590, 591, 592, 573, 786,
	635, 655, 654, 664, 665, 657, 658, 659, 660, 661,
	662, 663, 656, 639, 61, 666, 301, 293, 82, 302,
	303, 309, 676, 1338, 966, 294, 296, 306, 890, 291,
	308, 307, 848, 614, 732, 617, 638, 884, 636, 637,
	1069, 628, 91, 599, 285, 285, 285, 1070, 1257, 678,
	679, 1565, 694, 91, 678, 679, 1621, 751, 1145, 91,
	1580, 1481, 1159, 702, 703, 704, 734, 93, 94, 95,
	644, 645, 643, 804, 657, 658, 659, 660, 661, 662,
	663, 656, 1445, 735, 666, 1480, 575, 576, 646, 748,
	437, 762, 712, 714, 716, 718, 720, 722, 723, 713,
	715, 1622, 719, 721, 761, 724, 770, 659, 660, 661,
	662, 663, 656, 736, 817, 666, 1272, 1271, 644, 645,
	643, 1399, 781, 655, 654, 664, 665, 657, 658, 659,
	660, 661, 662, 663, 656, 771, 646, 666, 776, 1260,
	830, 833, 834, 835, 836, 837, 838, 1582, 839, 840,
	841, 842, 843, 818, 819, 820, 821, 802, 803, 831,
	966, 805, 1170, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 822, 823, 824, 825, 826, 827, 828,
	829, 1158, 1561, 1157, 1137, 1138, 1139, 285, 987, 988,
	1498, 844, 91, 1478, 847, 59, 849, 285, 285, 91,
	91, 91, 644, 645, 643, 285, 1269, 914, 285, 1134,
	874, 285, 867, 868, 984, 285, 408, 91, 270, 1533,
	646, 1532, 91, 91, 91, 285, 91, 91, 93, 94,
	95, 68, 832, 93, 94, 95, 91, 91, 1524, 1598,
	873, 1395, 644, 645, 643, 1584, 408, 794, 1066, 1524,
	1573, 871, 906, 908, 909, 983, 1362, 850, 851, 907,
	646, 644, 645, 643, 566, 860, 1194, 746, 428, 1340,
	1067, 866, 1524, 408, 644, 645, 643, 1524, 1552, 646,
	1451, 93, 94, 95, 642, 879, 408, 396, 912, 93,
	94, 95, 646, 397, 423, 424, 935, 863, 1194, 352,
	351, 354, 355, 356, 357, 1524, 1523, 845, 353, 358,
	91, 1470, 1469, 1006, 852, 853, 854, 93, 94, 95,
	1535, 1242, 1457, 408, 1454, 408, 954, 957, 1405, 1404,
	1401, 1402, 872, 1401, 1400, 967, 30, 876, 877, 878,
	913, 880, 881, 1005, 934, 1362, 91, 91, 945, 943,
	1403, 885, 886, 1065, 1006, 944, 995, 408, 1062, 1060,
	1200, 1061, 949, 1006, 408, 694, 91, 1201, 1058, 1064,
	642, 408, 1006, 285, 793, 792, 91, 774, 1243, 975,
	976, 285, 774, 70, 1351, 936, 937, 1362, 59, 285,
	285, 1039, 996, 285, 285, 30, 1176, 285, 285, 285,
	91, 946, 1030, 1175, 773, 401, 995, 773, 979, 985,
	861, 779, 30, 91, 568, 945, 943, 59, 989, 1590,
	1487, 1074, 1001, 775, 997, 777, 1505, 995, 775, 1301,
	773, 947, 948, 998, 1462, 871, 1094, 437, 1391, 1031,
	995, 1004, 1246, 1033, 1366, 1367, 1594, 59, 1090, 1085,
	1051, 1021, 1084, 1488, 1032, 1097, 1607, 59, 1603, 1393,
	1081, 1082, 1083, 999, 59, 1369, 1038, 285, 91, 1037,
	91, 1351, 1116, 1034, 980, 1029, 285, 285, 285, 285,
	285, 1273, 285, 285, 894, 865, 285, 91, 1095, 1075,
	1076, 1077, 1078, 1217, 1215, 1054, 1372, 1371, 1218, 1216,
	1214, 1213, 1587, 285, 1344, 1086, 1087, 1088, 285, 1183,
	285, 285, 745, 1592, 1192, 285, 91, 1011, 1014, 1015,
	1016, 1012, 394, 1013, 1017, 1191, 1219, 1098, 1015, 1016,
	962, 1131, 1091, 1092, 1264, 791, 1118, 1119, 1120, 1121,
	1122, 597, 1125, 1126, 1256, 963, 1127, 414, 1567, 738,
	1566, 1503, 950, 951, 912, 1254, 956, 959, 960, 1248,
	92, 739, 415, 1129, 286, 1449, 1483, 286, 1130, 749,
	750, 417, 92, 416, 286, 1135, 1100, 864, 1019, 402,
	403, 405, 1190, 1099, 974, 1101, 1448, 977, 978, 414,
	1189, 406, 70, 1447, 1347, 1194, 624, 1609, 1608, 1609,
	286, 92, 1128, 1164, 415, 286, 913, 286, 1161, 887,
	1140, 411, 412, 417, 752, 416, 1182, 285, 1549, 1476,
	981, 401, 68, 1154, 73, 65, 1187, 285, 285, 285,
	285, 285, 1207, 1, 399, 1153, 1601, 1414, 1484, 285,
	1106, 1568, 1517, 285, 1385, 1057, 1048, 285, 80, 1169,
	565, 285, 654, 664, 665, 657, 658, 659, 660, 661,
	662, 663, 656, 1196, 1186, 666, 79, 1559, 1241, 882,
	91, 610, 1195, 1197, 1147, 1056, 1055, 1244, 1148, 1247,
	1525, 1474, 1068, 1252, 1252, 1202, 1258, 1071, 1208, 1155,
	1156, 1211, 1220, 1392, 1255, 1162, 1230, 1232, 1165, 1166,
	1209, 1210, 1564, 1212, 799, 1224, 1172, 1051, 797, 1253,
	1174, 1236, 798, 1177, 1178, 1179, 1180, 1181, 91, 91,
	796, 801, 800, 795, 298, 432, 895, 312, 1261, 1262,
	1249, 1250, 1018, 1263, 787, 1265, 1266, 1267, 1096, 753,
	83, 1287, 1294, 1293, 1102, 892, 1276, 1270, 91, 295,
	618, 619, 300, 1231, 674, 1233, 1188, 1234, 1237, 1222,
	1223, 438, 431, 1357, 986, 1292, 741, 1446, 1346, 1168,
	706, 964, 767, 91, 1283, 1284, 1285, 335, 905, 396,
	350, 347, 348, 990, 1199, 648, 333, 327, 766, 1307,
	1308, 1318, 759, 1309, 286, 1010, 1008, 1149, 1150, 286,
	1007, 427, 1315, 1368, 1364, 286, 765, 994, 410, 285,
	1316, 286, 1441, 1543, 1331, 409, 92, 961, 1167, 91,
	92, 1317, 92, 421, 91, 91, 51, 1207, 92, 1352,
	945, 1341, 631, 317, 1275, 1337, 1330, 944, 92, 92,
	1355, 32, 418, 22, 21, 20, 1286, 19, 18, 24,
	91, 1291, 1288, 1279, 1289, 1282, 1316, 1278, 17, 16,
	1370, 1280, 1281, 1306, 91, 15, 91, 91, 585, 1345,
	1252, 1252, 36, 1384, 27, 1290, 26, 1377, 25, 14,
	13, 326, 12, 11, 10, 1398, 9, 8, 1313, 1314,
	1383, 4, 634, 23, 285, 1389, 1390, 1388, 692, 1378,
	2, 1051, 0, 1051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 1396, 1397, 0, 0, 0,
	91, 1407, 1415, 91, 91, 91, 285, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 1408, 0, 1410, 0,
	0, 0, 0, 0, 92, 0, 286, 286, 286, 0,
	1420, 1421, 0, 0, 1406, 92, 1379, 0, 0, 0,
	0, 92, 0, 1373, 0, 0, 0, 0, 0, 1429,
	0, 0, 0, 0, 1409, 664, 665, 657, 658, 659,
	660, 661, 662, 663, 656, 0, 1419, 666, 0, 1207,
	0, 1424, 0, 0, 1450, 0, 0, 0, 0, 0,
	0, 0, 1459, 0, 91, 0, 0, 1426, 1427, 0,
	1428, 1244, 91, 1430, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 1458,
	0, 0, 0, 0, 91, 0, 1011, 1014, 1015, 1016,
	1012, 1051, 1013, 1017, 0, 0, 1366, 1367, 1491, 0,
	0, 0, 1468, 1477, 1423, 1479, 0, 0, 1425, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 1434,
	1435, 1486, 0, 0, 1471, 91, 91, 0, 91, 0,
	1490, 0, 0, 91, 1502, 91, 91, 91, 285, 286,
	1355, 91, 1504, 0, 92, 1452, 1453, 0, 1456, 286,
	286, 92, 92, 92, 1522, 1516, 0, 286, 91, 285,
	286, 1529, 0, 286, 0, 1497, 1467, 286, 1511, 92,
	1512, 1514, 1515, 0, 92, 92, 92, 286, 92, 92,
	0, 1530, 1510, 1531, 0, 0, 1506, 1550, 92, 92,
	1558, 0, 1482, 1537, 1355, 91, 0, 0, 1557, 1556,
	0, 0, 647, 0, 0, 0, 91, 91, 0, 0,
	0, 0, 0, 0, 1572, 1571, 0, 0, 0, 1538,
	0, 0, 91, 0, 0, 0, 1207, 0, 1578, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 326, 0,
	0, 91, 0, 1486, 1051, 0, 0, 0, 1586, 0,
	707, 0, 0, 1513, 0, 0, 0, 0, 1591, 1593,
	0, 91, 92, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 740,
	743, 1539, 1540, 1541, 1542, 1617, 1546, 0, 1547, 1548,
	0, 0, 0, 1581, 0, 0, 1595, 0, 92, 92,
	0, 1553, 0, 1554, 1555, 655, 654, 664, 665, 657,
	658, 659, 660, 661, 662, 663, 656, 0, 92, 666,
	0, 0, 0, 364, 29, 286, 0, 0, 92, 0,
	0, 0, 1574, 286, 0, 0, 0, 0, 0, 0,
	0, 286, 286, 0, 0, 286, 286, 0, 0, 286,
	286, 286, 92, 29, 0, 0, 0, 1583, 30, 31,
	60, 33, 34, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 35, 54, 55, 0, 57, 58, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 1618,
	1619, 1444, 1439, 0, 0, 0, 44, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	92, 0, 92, 0, 0, 0, 0, 0, 286, 286,
	286, 286, 286, 0, 286, 286, 0, 0, 286, 92,
	0, 0, 655, 654, 664, 665, 657, 658, 659, 660,
	661, 662, 663, 656, 0, 286, 666, 0, 0, 0,
	286, 0, 286, 286, 0, 0, 0, 286, 92, 0,
	0, 0, 0, 0, 875, 0, 37, 38, 40, 39,
	42, 0, 56, 655, 654, 664, 665, 657, 658, 659,
	660, 661, 662, 663, 656, 0, 0, 666, 891, 0,
	0, 0, 0, 0, 0, 43, 63, 62, 0, 0,
	52, 53, 41, 0, 0, 0, 901, 902, 903, 904,
	0, 0, 0, 0, 0, 0, 45, 46, 0, 47,
	48, 49, 50, 0, 0, 361, 0, 650, 0, 653,
	0, 0, 0, 329, 0, 667, 668, 669, 670, 671,
	672, 673, 0, 651, 652, 649, 655, 654, 664, 665,
	657, 658, 659, 660, 661, 662, 663, 656, 0, 286,
	666, 952, 953, 90, 0, 0, 0, 0, 0, 286,
	286, 286, 286, 286, 0, 314, 0, 0, 0, 0,
	0, 286, 1438, 0, 0, 286, 0, 0, 0, 286,
	0, 0, 0, 286, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 439, 61, 0, 608, 0, 0,
	0, 608, 92, 608, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 29, 0, 0, 0, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 677, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 0, 1436, 0,
	92, 92, 0, 655, 654, 664, 665, 657, 658, 659,
	660, 661, 662, 663, 656, 690, 0, 666, 0, 695,
	696, 697, 698, 699, 700, 701, 677, 677, 677, 705,
	92, 708, 711, 711, 711, 717, 711, 711, 717, 711,
	725, 726, 727, 728, 729, 730, 731, 0, 0, 733,
	0, 0, 0, 0, 29, 92, 655, 654, 664, 665,
	657, 658, 659, 660, 661, 662, 663, 656, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 768, 655,
	654, 664, 665, 657, 658, 659, 660, 661, 662, 663,
	656, 286, 1310, 666, 0, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 92, 92, 0, 0,
	0, 0, 655, 654, 664, 665, 657, 658, 659, 660,
	661, 662, 663, 656, 0, 0, 666, 0, 0, 0,
	0, 0, 92, 655, 654, 664, 665, 657, 658, 659,
	660, 661, 662, 663, 656, 0, 92, 666, 92, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 439, 0, 439, 0, 0, 0, 0,
	1171, 439, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 630, 632, 0, 0, 0, 0, 1184, 1185, 743,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 92, 0, 0, 92, 92, 92, 286, 0,
	0, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 608, 608, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 1146, 0, 0, 0, 608, 608, 608, 0, 608,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	608, 655, 654, 664, 665, 657, 658, 659, 660, 661,
	662, 663, 656, 0, 0, 666, 92, 756, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 788, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 92, 0,
	92, 0, 0, 0, 0, 92, 0, 92, 92, 92,
	286, 0, 0, 92, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 286, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1022, 0, 0, 0, 768, 92, 0, 0,
	768, 0, 0, 0, 0, 0, 0, 439, 92, 92,
	0, 0, 0, 0, 439, 439, 439, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 439, 0, 0, 286, 0, 439, 439, 439,
	0, 439, 439, 92, 0, 0, 0, 0, 0, 0,
	0, 439, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 910, 0, 0, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	0, 0, 0, 0, 1443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 439, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 1460, 0, 0,
	1461, 0, 0, 1463, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 971, 0, 0, 0, 0,
	0, 972, 973, 0, 0, 0, 0, 1151, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 756, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	768, 1501, 326, 0, 0, 0, 1203, 1204, 439, 0,
	768, 768, 768, 768, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1022, 0, 1229, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 1136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 362, 0, 0, 0, 0, 0,
	1141, 1142, 1143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 29, 0, 422,
	0, 0, 430, 0, 0, 0, 0, 284, 0, 284,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1440, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 439, 1311,
	1312, 0, 0, 0, 0, 0, 0, 0, 1464, 1465,
	1466, 0, 0, 0, 1332, 1333, 0, 1334, 1335, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	1343, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	608, 284, 0, 0, 439, 0, 968, 284, 0, 1358,
	1360, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 29, 0, 439,
	0, 439, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 1411, 0, 0, 1416, 1417,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 284,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 1604, 0, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1493, 1494, 1495, 1496, 0, 0, 0, 1499, 1500,
	1507, 1508, 0, 1509, 0, 0, 0, 0, 1473, 0,
	1473, 1473, 1473, 0, 0, 0, 1387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 1473, 0, 0, 0, 0, 0, 0,
	0, 284, 284, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 284, 0, 0, 284, 0, 0, 0, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	1563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 439, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 422, 870, 0, 1610, 0,
	422, 422, 0, 0, 422, 422, 422, 0, 0, 0,
	0, 0, 0, 969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 422, 422, 422, 422, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 0, 870, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 284, 1027, 0, 0, 284, 284, 0,
	0, 284, 1035, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 284, 284, 284, 284, 0, 284, 284, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	0, 0, 284, 0, 1132, 1133, 0, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 755, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 156, 0, 0,
	229, 170, 0, 0, 0, 422, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 94, 95, 0, 757, 0, 422, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 644, 645, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	422, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	969, 284, 284, 284, 284, 284, 0, 0, 0, 0,
	0, 0, 0, 1221, 0, 0, 0, 284, 0, 134,
	0, 1027, 0, 287, 0, 284, 0, 0, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 105, 155, 266, 204, 130, 870, 0,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 969, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 551,
	539, 0, 494, 554, 467, 484, 562, 485, 488, 527,
	452, 507, 182, 482, 0, 471, 447, 478, 448, 469,
	496, 125, 500, 466, 541, 510, 553, 154, 0, 0,
	472, 560, 156, 518, 0, 229, 170, 0, 0, 0,
	498, 543, 505, 536, 493, 528, 457, 517, 555, 483,
	525, 556, 0, 0, 969, 93, 94, 95, 0, 1052,
	1053, 0, 0, 0, 0, 0, 115, 284, 522, 550,
	480, 524, 526, 564, 446, 519, 0, 450, 453, 561,
	546, 475, 476, 1245, 0, 0, 0, 0, 0, 0,
	497, 506, 533, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 0, 516, 0, 0, 0, 454, 451,
	0, 0, 0, 0, 495, 0, 0, 0, 456, 0,
	474, 534, 0, 444, 134, 538, 545, 492, 287, 549,
	490, 489, 552, 201, 0, 233, 138, 153, 111, 150,
	97, 107, 0, 136, 179, 209, 213, 542, 470, 479,
	119, 477, 211, 189, 250, 515, 191, 210, 157, 239,
	202, 249, 259, 260, 236, 257, 265, 226, 100, 235,
	247, 116, 221, 0, 0, 0, 102, 245, 232, 168,
	147, 148, 101, 0, 207, 124, 132, 121, 181, 242,
	243, 120, 268, 108, 256, 104, 109, 255, 175, 238,
	246, 169, 162, 103, 244, 167, 161, 152, 128, 140,
	199, 159, 200, 141, 172, 171, 173, 0, 449, 0,
	230, 253, 269, 113, 465, 237, 263, 264, 0, 203,
	114, 133, 127, 198, 131, 174, 110, 143, 227, 151,
	158, 206, 267, 188, 212, 117, 252, 228, 461, 464,
	459, 460, 508, 509, 557, 558, 559, 535, 455, 0,
	462, 463, 0, 540, 547, 548, 512, 96, 105, 155,
	266, 204, 130, 513, 514, 254, 445, 458, 123, 468,
	0, 0, 481, 486, 487, 499, 501, 502, 503, 504,
	511, 520, 521, 523, 529, 530, 531, 532, 537, 544,
	563, 98, 99, 106, 112, 118, 122, 126, 129, 135,
	139, 142, 144, 145, 146, 149, 160, 163, 164, 165,
	166, 176, 177, 178, 180, 183, 184, 185, 186, 187,
	190, 192, 193, 194, 195, 196, 197, 205, 208, 214,
	215, 216, 217, 218, 219, 220, 222, 223, 224, 225,
	231, 234, 240, 241, 251, 258, 261, 137, 248, 262,
	551, 539, 0, 494, 554, 467, 484, 562, 485, 488,
	527, 452, 507, 182, 482, 0, 471, 447, 478, 448,
	469, 496, 125, 500, 466, 541, 510, 553, 154, 0,
	0, 472, 560, 156, 518, 0, 229, 170, 0, 0,
	0, 498, 543, 505, 536, 493, 528, 457, 517, 555,
	483, 525, 556, 0, 0, 0, 93, 94, 95, 0,
	1052, 1053, 0, 0, 0, 0, 0, 115, 0, 522,
	550, 480, 524, 526, 564, 446, 519, 0, 450, 453,
	561, 546, 475, 476, 0, 0, 0, 0, 0, 0,
	0, 497, 506, 533, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 0, 516, 0, 0, 0, 454,
	451, 0, 0, 0, 0, 495, 0, 0, 0, 456,
	0, 474, 534, 0, 444, 134, 538, 545, 492, 287,
	549, 490, 489, 552, 201, 0, 233, 138, 153, 111,
	150, 97, 107, 0, 136, 179, 209, 213, 542, 470,
	479, 119, 477, 211, 189, 250, 515, 191, 210, 157,
	239, 202, 249, 259, 260, 236, 257, 265, 226, 100,
	235, 247, 116, 221, 0, 0, 0, 102, 245, 232,
	168, 147, 148, 101, 0, 207, 124, 132, 121, 181,
	242, 243, 120, 268, 108, 256, 104, 109, 255, 175,
	238, 246, 169, 162, 103, 244, 167, 161, 152, 128,
	140, 199, 159, 200, 141, 172, 171, 173, 0, 449,
	0, 230, 253, 269, 113, 465, 237, 263, 264, 0,
	203, 114, 133, 127, 198, 131, 174, 110, 143, 227,
	151, 158, 206, 267, 188, 212, 117, 252, 228, 461,
	464, 459, 460, 508, 509, 557, 558, 559, 535, 455,
	0, 462, 463, 0, 540, 547, 548, 512, 96, 105,
	155, 266, 204, 130, 513, 514, 254, 445, 458, 123,
	468, 0, 0, 481, 486, 487, 499, 501, 502, 503,
	504, 511, 520, 521, 523, 529, 530, 531, 532, 537,
	544, 563, 98, 99, 106, 112, 118, 122, 126, 129,
	135, 139, 142, 144, 145, 146, 149, 160, 163, 164,
	165, 166, 176, 177, 178, 180, 183, 184, 185, 186,
	187, 190, 192, 193, 194, 195, 196, 197, 205, 208,
	214, 215, 216, 217, 218, 219, 220, 222, 223, 224,
	225, 231, 234, 240, 241, 251, 258, 261, 137, 248,
	262, 551, 539, 0, 494, 554, 467, 484, 562, 485,
	488, 527, 452, 507, 182, 482, 0, 471, 447, 478,
	448, 469, 496, 125, 500, 466, 541, 510, 553, 154,
	0, 0, 472, 560, 156, 518, 0, 229, 170, 0,
	0, 0, 498, 543, 505, 536, 493, 528, 457, 517,
	555, 483, 525, 556, 59, 0, 0, 93, 94, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	522, 550, 480, 524, 526, 564, 446, 519, 0, 450,
	453, 561, 546, 475, 476, 0, 0, 0, 0, 0,
	0, 0, 497, 506, 533, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 0, 516, 0, 0, 0,
	454, 451, 0, 0, 0, 0, 495, 0, 0, 0,
	456, 0, 474, 534, 0, 444, 134, 538, 545, 492,
	287, 549, 490, 489, 552, 201, 0, 233, 138, 153,
	111, 150, 97, 107, 0, 136, 179, 209, 213, 542,
	470, 479, 119, 477, 211, 189, 250, 515, 191, 210,
	157, 239, 202, 249, 259, 260, 236, 257, 265, 226,
	100, 235, 247, 116, 221, 0, 0, 0, 102, 245,
	232, 168, 147, 148, 101, 0, 207, 124, 132, 121,
	181, 242, 243, 120, 268, 108, 256, 104, 109, 255,
	175, 238, 246, 169, 162, 103, 244, 167, 161, 152,
	128, 140, 199, 159, 200, 141, 172, 171, 173, 0,
	449, 0, 230, 253, 269, 113, 465, 237, 263, 264,
	0, 203, 114, 133, 127, 198, 131, 174, 110, 143,
	227, 151, 158, 206, 267, 188, 212, 117, 252, 228,
	461, 464, 459, 460, 508, 509, 557, 558, 559, 535,
	455, 0, 462, 463, 0, 540, 547, 548, 512, 96,
	105, 155, 266, 204, 130, 513, 514, 254, 445, 458,
	123, 468, 0, 0, 481, 486, 487, 499, 501, 502,
	503, 504, 511, 520, 521, 523, 529, 530, 531, 532,
	537, 544, 563, 98, 99, 106, 112, 118, 122, 126,
	129, 135, 139, 142, 144, 145, 146, 149, 160, 163,
	164, 165, 166, 176, 177, 178, 180, 183, 184, 185,
	186, 187, 190, 192, 193, 194, 195, 196, 197, 205,
	208, 214, 215, 216, 217, 218, 219, 220, 222, 223,
	224, 225, 231, 234, 240, 241, 251, 258, 261, 137,
	248, 262, 551, 539, 0, 494, 554, 467, 484, 562,
	485, 488, 527, 452, 507, 182, 482, 0, 471, 447,
	478, 448, 469, 496, 125, 500, 466, 541, 510, 553,
	154, 0, 0, 472, 560, 156, 518, 0, 229, 170,
	0, 0, 0, 498, 543, 505, 536, 493, 528, 457,
	517, 555, 483, 525, 556, 0, 0, 0, 93, 94,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 522, 550, 480, 524, 526, 564, 446, 519, 0,
	450, 453, 561, 546, 475, 476, 0, 0, 0, 0,
	0, 0, 0, 497, 506, 533, 491, 0, 0, 0,
	0, 0, 0, 1349, 0, 473, 0, 516, 0, 0,
	0, 454, 451, 0, 0, 0, 0, 495, 0, 0,
	0, 456, 0, 474, 534, 0, 444, 134, 538, 545,
	492, 287, 549, 490, 489, 552, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	542, 470, 479, 119, 477, 211, 189, 250, 515, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 449, 0, 230, 253, 269, 113, 465, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 461, 464, 459, 460, 508, 509, 557, 558, 559,
	535, 455, 0, 462, 463, 0, 540, 547, 548, 512,
	96, 105, 155, 266, 204, 130, 513, 514, 254, 445,
	458, 123, 468, 0, 0, 481, 486, 487, 499, 501,
	502, 503, 504, 511, 520, 521, 523, 529, 530, 531,
	532, 537, 544, 563, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 551, 539, 0, 494, 554, 467, 484,
	562, 485, 488, 527, 452, 507, 182, 482, 0, 471,
	447, 478, 448, 469, 496, 125, 500, 466, 541, 510,
	553, 154, 0, 0, 472, 560, 156, 518, 0, 229,
	170, 0, 0, 0, 498, 543, 505, 536, 493, 528,
	457, 517, 555, 483, 525, 556, 0, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 522, 550, 480, 524, 526, 564, 446, 519,
	0, 450, 453, 561, 546, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 497, 506, 533, 491, 0, 0,
	0, 0, 0, 0, 1036, 0, 473, 0, 516, 0,
	0, 0, 454, 451, 0, 0, 0, 0, 495, 0,
	0, 0, 456, 0, 474, 534, 0, 444, 134, 538,
	545, 492, 287, 549, 490, 489, 552, 201, 0, 233,
	138, 153, 111, 150, 97, 107, 0, 136, 179, 209,
	213, 542, 470, 479, 119, 477, 211, 189, 250, 515,
	191, 210, 157, 239, 202, 249, 259, 260, 236, 257,
	265, 226, 100, 235, 247, 116, 221, 0, 0, 0,
	102, 245, 232, 168, 147, 148, 101, 0, 207, 124,
	132, 121, 181, 242, 243, 120, 268, 108, 256, 104,
	109, 255, 175, 238, 246, 169, 162, 103, 244, 167,
	161, 152, 128, 140, 199, 159, 200, 141, 172, 171,
	173, 0, 449, 0, 230, 253, 269, 113, 465, 237,
	263, 264, 0, 203, 114, 133, 127, 198, 131, 174,
	110, 143, 227, 151, 158, 206, 267, 188, 212, 117,
	252, 228, 461, 464, 459, 460, 508, 509, 557, 558,
	559, 535, 455, 0, 462, 463, 0, 540, 547, 548,
	512, 96, 105, 155, 266, 204, 130, 513, 514, 254,
	445, 458, 123, 468, 0, 0, 481, 486, 487, 499,
	501, 502, 503, 504, 511, 520, 521, 523, 529, 530,
	531, 532, 537, 544, 563, 98, 99, 106, 112, 118,
	122, 126, 129, 135, 139, 142, 144, 145, 146, 149,
	160, 163, 164, 165, 166, 176, 177, 178, 180, 183,
	184, 185, 186, 187, 190, 192, 193, 194, 195, 196,
	197, 205, 208, 214, 215, 216, 217, 218, 219, 220,
	222, 223, 224, 225, 231, 234, 240, 241, 251, 258,
	261, 137, 248, 262, 551, 539, 0, 494, 554, 467,
	484, 562, 485, 488, 527, 452, 507, 182, 482, 0,
	471, 447, 478, 448, 469, 496, 125, 500, 466, 541,
	510, 553, 154, 0, 0, 472, 560, 156, 518, 0,
	229, 170, 0, 0, 0, 498, 543, 505, 536, 493,
	528, 457, 517, 555, 483, 525, 556, 0, 0, 0,
	93, 94, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 522, 550, 480, 524, 526, 564, 446,
	519, 0, 450, 453, 561, 546, 475, 476, 0, 0,
	0, 0, 0, 0, 0, 497, 506, 533, 491, 0,
	0, 0, 0, 0, 0, 1000, 0, 473, 0, 516,
	0, 0, 0, 454, 451, 0, 0, 0, 0, 495,
	0, 0, 0, 456, 0, 474, 534, 0, 444, 134,
	538, 545, 492, 287, 549, 490, 489, 552, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 542, 470, 479, 119, 477, 211, 189, 250,
	515, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 449, 0, 230, 253, 269, 113, 465,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 461, 464, 459, 460, 508, 509, 557,
	558, 559, 535, 455, 0, 462, 463, 0, 540, 547,
	548, 512, 96, 105, 155, 266, 204, 130, 513, 514,
	254, 445, 458, 123, 468, 0, 0, 481, 486, 487,
	499, 501, 502, 503, 504, 511, 520, 521, 523, 529,
	530, 531, 532, 537, 544, 563, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 551, 539, 0, 494, 554,
	467, 484, 562, 485, 488, 527, 452, 507, 182, 482,
	0, 471, 447, 478, 448, 469, 496, 125, 500, 466,
	541, 510, 553, 154, 0, 0, 472, 560, 156, 518,
	0, 229, 170, 0, 0, 0, 498, 543, 505, 536,
	493, 528, 457, 517, 555, 483, 525, 556, 0, 0,
	0, 93, 94, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 522, 550, 480, 524, 526, 564,
	446, 519, 0, 450, 453, 561, 546, 475, 476, 0,
	0, 0, 0, 0, 0, 0, 497, 506, 533, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 0,
	516, 0, 0, 0, 454, 451, 0, 0, 0, 0,
	495, 0, 0, 0, 456, 0, 474, 534, 0, 444,
	134, 538, 545, 492, 287, 549, 490, 489, 552, 201,
	0, 233, 138, 153, 111, 150, 97, 107, 0, 136,
	179, 209, 213, 542, 470, 479, 119, 477, 211, 189,
	250, 515, 191, 210, 157, 239, 202, 249, 259, 260,
	236, 257, 265, 226, 100, 235, 247, 116, 221, 0,
	0, 0, 102, 245, 232, 168, 147, 148, 101, 0,
	207, 124, 132, 121, 181, 242, 243, 120, 268, 108,
	256, 104, 109, 255, 175, 238, 246, 169, 162, 103,
	244, 167, 161, 152, 128, 140, 199, 159, 200, 141,
	172, 171, 173, 0, 449, 0, 230, 253, 269, 113,
	465, 237, 263, 264, 0, 203, 114, 133, 127, 198,
	131, 174, 110, 143, 227, 151, 158, 206, 267, 188,
	212, 117, 252, 228, 461, 464, 459, 460, 508, 509,
	557, 558, 559, 535, 455, 0, 462, 463, 0, 540,
	547, 548, 512, 96, 105, 155, 266, 204, 130, 513,
	514, 254, 445, 458, 123, 468, 0, 0, 481, 486,
	487, 499, 501, 502, 503, 504, 511, 520, 521, 523,
	529, 530, 531, 532, 537, 544, 563, 98, 99, 106,
	112, 118, 122, 126, 129, 135, 139, 142, 144, 145,
	146, 149, 160, 163, 164, 165, 166, 176, 177, 178,
	180, 183, 184, 185, 186, 187, 190, 192, 193, 194,
	195, 196, 197, 205, 208, 214, 215, 216, 217, 218,
	219, 220, 222, 223, 224, 225, 231, 234, 240, 241,
	251, 258, 261, 137, 248, 262, 551, 539, 0, 494,
	554, 467, 484, 562, 485, 488, 527, 452, 507, 182,
	482, 0, 471, 447, 478, 448, 469, 496, 125, 500,
	466, 541, 510, 553, 154, 0, 0, 472, 560, 156,
	518, 0, 229, 170, 0, 0, 0, 498, 543, 505,
	536, 493, 528, 457, 517, 555, 483, 525, 556, 0,
	0, 0, 93, 94, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 522, 550, 480, 524, 526,
	564, 446, 519, 0, 450, 453, 561, 546, 475, 476,
	0, 0, 0, 0, 0, 0, 0, 497, 506, 533,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 516, 0, 0, 0, 454, 451, 0, 0, 0,
	0, 495, 0, 0, 0, 456, 0, 474, 534, 0,
	444, 134, 538, 545, 492, 287, 549, 490, 489, 552,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 542, 470, 479, 119, 477, 211,
	189, 250, 515, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 442, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 449, 0, 230, 253, 269,
	113, 465, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 443, 441, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 461, 464, 459, 460, 508,
	509, 557, 558, 559, 535, 455, 0, 462, 463, 0,
	540, 547, 548, 512, 96, 105, 155, 266, 204, 130,
	513, 514, 254, 445, 458, 123, 468, 0, 0, 481,
	486, 487, 499, 501, 502, 503, 504, 511, 520, 521,
	523, 529, 530, 531, 532, 537, 544, 563, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 551, 539, 0,
	494, 554, 467, 484, 562, 485, 488, 527, 452, 507,
	182, 482, 0, 471, 447, 478, 448, 469, 496, 125,
	500, 466, 541, 510, 553, 154, 0, 0, 472, 560,
	156, 518, 0, 229, 170, 0, 0, 0, 498, 543,
	505, 536, 493, 528, 457, 517, 555, 483, 525, 556,
	0, 0, 0, 93, 94, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 522, 550, 480, 524,
	526, 564, 446, 519, 0, 450, 453, 561, 546, 475,
	476, 0, 0, 0, 0, 0, 0, 0, 497, 506,
	533, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 0, 516, 0, 0, 0, 454, 451, 0, 0,
	0, 0, 495, 0, 0, 0, 456, 0, 474, 534,
	0, 444, 134, 538, 545, 492, 287, 549, 490, 489,
	552, 201, 0, 233, 138, 153, 111, 150, 97, 107,
	0, 136, 179, 209, 213, 542, 470, 479, 119, 477,
	211, 189, 250, 515, 191, 210, 157, 239, 202, 249,
	259, 260, 236, 257, 265, 226, 100, 235, 780, 116,
	221, 0, 0, 0, 102, 245, 232, 168, 147, 148,
	101, 0, 207, 124, 132, 121, 181, 242, 243, 120,
	268, 108, 256, 104, 442, 255, 175, 238, 246, 169,
	162, 103, 244, 167, 161, 152, 128, 140, 199, 159,
	200, 141, 172, 171, 173, 0, 449, 0, 230, 253,
	269, 113, 465, 237, 263, 264, 0, 203, 114, 133,
	127, 198, 131, 443, 441, 143, 227, 151, 158, 206,
	267, 188, 212, 117, 252, 228, 461, 464, 459, 460,
	508, 509, 557, 558, 559, 535, 455, 0, 462, 463,
	0, 540, 547, 548, 512, 96, 105, 155, 266, 204,
	130, 513, 514, 254, 445, 458, 123, 468, 0, 0,
	481, 486, 487, 499, 501, 502, 503, 504, 511, 520,
	521, 523, 529, 530, 531, 532, 537, 544, 563, 98,
	99, 106, 112, 118, 122, 126, 129, 135, 139, 142,
	144, 145, 146, 149, 160, 163, 164, 165, 166, 176,
	177, 178, 180, 183, 184, 185, 186, 187, 190, 192,
	193, 194, 195, 196, 197, 205, 208, 214, 215, 216,
	217, 218, 219, 220, 222, 223, 224, 225, 231, 234,
	240, 241, 251, 258, 261, 137, 248, 262, 551, 539,
	0, 494, 554, 467, 484, 562, 485, 488, 527, 452,
	507, 182, 482, 0, 471, 447, 478, 448, 469, 496,
	125, 500, 466, 541, 510, 553, 154, 0, 0, 472,
	560, 156, 518, 0, 229, 170, 0, 0, 0, 498,
	543, 505, 536, 493, 528, 457, 517, 555, 483, 525,
	556, 0, 0, 0, 93, 94, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 522, 550, 480,
	524, 526, 564, 446, 519, 0, 450, 453, 561, 546,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 497,
	506, 533, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 0, 516, 0, 0, 0, 454, 451, 0,
	0, 0, 0, 495, 0, 0, 0, 456, 0, 474,
	534, 0, 444, 134, 538, 545, 492, 287, 549, 490,
	489, 552, 201, 0, 233, 138, 153, 111, 150, 97,
	107, 0, 136, 179, 209, 213, 542, 470, 479, 119,
	477, 211, 189, 250, 515, 191, 210, 157, 239, 202,
	249, 259, 260, 236, 257, 265, 226, 100, 235, 433,
	116, 221, 0, 0, 0, 102, 245, 232, 168, 147,
	148, 101, 0, 207, 124, 132, 121, 181, 242, 243,
	120, 268, 108, 256, 104, 442, 255, 175, 238, 246,
	169, 162, 103, 244, 167, 161, 152, 128, 140, 199,
	159, 200, 141, 172, 171, 173, 0, 449, 0, 230,
	253, 269, 113, 465, 237, 263, 264, 0, 203, 114,
	133, 127, 198, 131, 443, 441, 436, 435, 151, 158,
	206, 267, 188, 212, 117, 252, 228, 461, 464, 459,
	460, 508, 509, 557, 558, 559, 535, 455, 0, 462,
	463, 0, 540, 547, 548, 512, 96, 105, 155, 266,
	204, 130, 513, 514, 254, 445, 458, 123, 468, 0,
	0, 481, 486, 487, 499, 501, 502, 503, 504, 511,
	520, 521, 523, 529, 530, 531, 532, 537, 544, 563,
	98, 99, 106, 112, 118, 122, 126, 129, 135, 139,
	142, 144, 145, 146, 149, 160, 163, 164, 165, 166,
	176, 177, 178, 180, 183, 184, 185, 186, 187, 190,
	192, 193, 194, 195, 196, 197, 205, 208, 214, 215,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 231,
	234, 240, 241, 251, 258, 261, 137, 248, 262, 182,
	0, 374, 940, 0, 331, 0, 0, 0, 125, 0,
	330, 0, 0, 0, 154, 0, 0, 941, 377, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 365,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 93, 94, 95, 352, 351, 354, 355, 356,
	357, 0, 0, 115, 353, 358, 359, 360, 0, 0,
	0, 0, 328, 345, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 343, 420, 0, 0,
	0, 391, 0, 344, 0, 0, 337, 338, 340, 339,
	341, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 390, 0, 0, 287, 0, 0, 388, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 378, 389, 384, 385, 382,
	383, 381, 380, 379, 392, 367, 368, 369, 370, 375,
	0, 386, 387, 371, 96, 105, 155, 266, 204, 130,
	372, 373, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 182, 0, 374,
	0, 0, 331, 0, 0, 0, 125, 0, 330, 0,
	0, 0, 154, 0, 0, 0, 377, 156, 0, 0,
	229, 170, 0, 0, 0, 0, 0, 365, 366, 0,
	0, 0, 0, 0, 0, 1043, 0, 59, 0, 0,
	93, 94, 95, 352, 351, 354, 355, 356, 357, 0,
	0, 115, 353, 358, 359, 360, 1044, 0, 0, 0,
	328, 345, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 343, 0, 0, 0, 0, 391,
	0, 344, 0, 0, 337, 338, 340, 339, 341, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	390, 0, 0, 287, 0, 0, 388, 0, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 378, 389, 384, 385, 382, 383, 381,
	380, 379, 392, 367, 368, 369, 370, 375, 0, 386,
	387, 371, 96, 105, 155, 266, 204, 130, 372, 373,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 182, 0, 374, 0, 0,
	331, 0, 0, 0, 125, 0, 330, 0, 0, 0,
	154, 0, 0, 0, 377, 156, 0, 0, 229, 170,
	0, 0, 0, 0, 0, 365, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 408, 93, 94,
	95, 352, 351, 354, 355, 356, 357, 0, 0, 115,
	353, 358, 359, 360, 0, 0, 0, 0, 328, 345,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 343, 0, 0, 0, 0, 391, 0, 344,
	0, 0, 337, 338, 340, 339, 341, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 390, 0,
	0, 287, 0, 0, 388, 0, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	0, 0, 0, 119, 0, 211, 189, 250, 0, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 0, 0, 230, 253, 269, 113, 0, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 378, 389, 384, 385, 382, 383, 381, 380, 379,
	392, 367, 368, 369, 370, 375, 0, 386, 387, 371,
	96, 105, 155, 266, 204, 130, 372, 373, 254, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 182, 0, 374, 0, 0, 331, 0,
	0, 0, 125, 0, 330, 0, 0, 0, 154, 0,
	0, 0, 377, 156, 0, 0, 229, 170, 0, 0,
	0, 0, 0, 365, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 93, 94, 95, 352,
	351, 354, 355, 356, 357, 0, 0, 115, 353, 358,
	359, 360, 0, 0, 0, 0, 328, 345, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	343, 420, 0, 0, 0, 391, 0, 344, 0, 0,
	337, 338, 340, 339, 341, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 390, 0, 0, 287,
	0, 0, 388, 0, 201, 0, 233, 138, 153, 111,
	150, 97, 107, 0, 136, 179, 209, 213, 0, 0,
	0, 119, 0, 211, 189, 250, 0, 191, 210, 157,
	239, 202, 249, 259, 260, 236, 257, 265, 226, 100,
	235, 247, 116, 221, 0, 0, 0, 102, 245, 232,
	168, 147, 148, 101, 0, 207, 124, 132, 121, 181,
	242, 243, 120, 268, 108, 256, 104, 109, 255, 175,
	238, 246, 169, 162, 103, 244, 167, 161, 152, 128,
	140, 199, 159, 200, 141, 172, 171, 173, 0, 0,
	0, 230, 253, 269, 113, 0, 237, 263, 264, 0,
	203, 114, 133, 127, 198, 131, 174, 110, 143, 227,
	151, 158, 206, 267, 188, 212, 117, 252, 228, 378,
	389, 384, 385, 382, 383, 381, 380, 379, 392, 367,
	368, 369, 370, 375, 0, 386, 387, 371, 96, 105,
	155, 266, 204, 130, 372, 373, 254, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 99, 106, 112, 118, 122, 126, 129,
	135, 139, 142, 144, 145, 146, 149, 160, 163, 164,
	165, 166, 176, 177, 178, 180, 183, 184, 185, 186,
	187, 190, 192, 193, 194, 195, 196, 197, 205, 208,
	214, 215, 216, 217, 218, 219, 220, 222, 223, 224,
	225, 231, 234, 240, 241, 251, 258, 261, 137, 248,
	262, 182, 0, 374, 0, 0, 331, 0, 0, 0,
	125, 0, 330, 0, 0, 0, 154, 0, 0, 0,
	377, 156, 0, 0, 229, 170, 0, 0, 0, 0,
	0, 365, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 93, 94, 95, 352, 958, 354,
	355, 356, 357, 0, 0, 115, 353, 358, 359, 360,
	0, 0, 0, 0, 328, 345, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 343, 420,
	0, 0, 0, 391, 0, 344, 0, 0, 337, 338,
	340, 339, 341, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 390, 0, 0, 287, 0, 0,
	388, 0, 201, 0, 233, 138, 153, 111, 150, 97,
	107, 0, 136, 179, 209, 213, 0, 0, 0, 119,
	0, 211, 189, 250, 0, 191, 210, 157, 239, 202,
	249, 259, 260, 236, 257, 265, 226, 100, 235, 247,
	116, 221, 0, 0, 0, 102, 245, 232, 168, 147,
	148, 101, 0, 207, 124, 132, 121, 181, 242, 243,
	120, 268, 108, 256, 104, 109, 255, 175, 238, 246,
	169, 162, 103, 244, 167, 161, 152, 128, 140, 199,
	159, 200, 141, 172, 171, 173, 0, 0, 0, 230,
	253, 269, 113, 0, 237, 263, 264, 0, 203, 114,
	133, 127, 198, 131, 174, 110, 143, 227, 151, 158,
	206, 267, 188, 212, 117, 252, 228, 378, 389, 384,
	385, 382, 383, 381, 380, 379, 392, 367, 368, 369,
	370, 375, 0, 386, 387, 371, 96, 105, 155, 266,
	204, 130, 372, 373, 254, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 99, 106, 112, 118, 122, 126, 129, 135, 139,
	142, 144, 145, 146, 149, 160, 163, 164, 165, 166,
	176, 177, 178, 180, 183, 184, 185, 186, 187, 190,
	192, 193, 194, 195, 196, 197, 205, 208, 214, 215,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 231,
	234, 240, 241, 251, 258, 261, 137, 248, 262, 182,
	0, 374, 0, 0, 331, 0, 0, 0, 125, 0,
	330, 0, 0, 0, 154, 0, 0, 0, 377, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 365,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 93, 94, 95, 352, 955, 354, 355, 356,
	357, 0, 0, 115, 353, 358, 359, 360, 0, 0,
	0, 0, 328, 345, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 343, 420, 0, 0,
	0, 391, 0, 344, 0, 0, 337, 338, 340, 339,
	341, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 390, 0, 0, 287, 0, 0, 388, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 378, 389, 384, 385, 382,
	383, 381, 380, 379, 392, 367, 368, 369, 370, 375,
	0, 386, 387, 371, 96, 105, 155, 266, 204, 130,
	372, 373, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 374, 0, 0, 331, 0, 0, 0, 125, 0,
	330, 0, 0, 0, 154, 0, 0, 0, 377, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 365,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 93, 94, 95, 352, 351, 354, 355, 356,
	357, 0, 0, 115, 353, 358, 359, 360, 0, 0,
	0, 0, 328, 345, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 343, 0, 0, 0,
	0, 391, 0, 344, 0, 0, 337, 338, 340, 339,
	341, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 390, 0, 0, 287, 0, 0, 388, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 378, 389, 384, 385, 382,
	383, 381, 380, 379, 392, 367, 368, 369, 370, 375,
	0, 386, 387, 371, 96, 105, 155, 266, 204, 130,
	372, 373, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 182, 0, 374,
	0, 0, 331, 0, 0, 0, 125, 0, 330, 0,
	0, 0, 154, 0, 0, 0, 377, 156, 0, 0,
	229, 170, 0, 0, 0, 0, 0, 365, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	93, 94, 95, 352, 351, 354, 355, 356, 357, 0,
	0, 115, 353, 358, 359, 360, 0, 0, 0, 0,
	328, 345, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 343, 0, 0, 0, 0, 391,
	0, 344, 0, 0, 337, 338, 340, 339, 341, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	390, 0, 0, 287, 0, 0, 388, 0, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 378, 389, 384, 385, 382, 383, 381,
	380, 379, 392, 367, 368, 369, 370, 375, 0, 386,
	387, 371, 96, 105, 155, 266, 204, 130, 372, 373,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 182, 0, 374, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 377, 156, 0, 0, 229, 170,
	0, 0, 0, 0, 0, 365, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 93, 94,
	95, 352, 351, 354, 355, 356, 357, 0, 0, 115,
	353, 358, 359, 360, 0, 0, 0, 0, 0, 345,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 343, 0, 0, 0, 0, 391, 0, 344,
	0, 0, 337, 338, 340, 339, 341, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 390, 0,
	0, 287, 0, 0, 388, 0, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	0, 0, 0, 119, 0, 211, 189, 250, 1611, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 0, 0, 230, 253, 269, 113, 0, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 378, 389, 384, 385, 382, 383, 381, 380, 379,
	392, 367, 368, 369, 370, 375, 0, 386, 387, 371,
	96, 105, 155, 266, 204, 130, 372, 373, 254, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 182, 0, 374, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 377, 156, 0, 0, 229, 170, 0, 0,
	0, 0, 0, 365, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 408, 93, 94, 95, 352,
	351, 354, 355, 356, 357, 0, 0, 115, 353, 358,
	359, 360, 0, 0, 0, 0, 0, 345, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	343, 0, 0, 0, 0, 391, 0, 344, 0, 0,
	337, 338, 340, 339, 341, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 390, 0, 0, 287,
	0, 0, 388, 0, 201, 0, 233, 138, 153, 111,
	150, 97, 107, 0, 136, 179, 209, 213, 0, 0,
	0, 119, 0, 211, 189, 250, 0, 191, 210, 157,
	239, 202, 249, 259, 260, 236, 257, 265, 226, 100,
	235, 247, 116, 221, 0, 0, 0, 102, 245, 232,
	168, 147, 148, 101, 0, 207, 124, 132, 121, 181,
	242, 243, 120, 268, 108, 256, 104, 109, 255, 175,
	238, 246, 169, 162, 103, 244, 167, 161, 152, 128,
	140, 199, 159, 200, 141, 172, 171, 173, 0, 0,
	0, 230, 253, 269, 113, 0, 237, 263, 264, 0,
	203, 114, 133, 127, 198, 131, 174, 110, 143, 227,
	151, 158, 206, 267, 188, 212, 117, 252, 228, 378,
	389, 384, 385, 382, 383, 381, 380, 379, 392, 367,
	368, 369, 370, 375, 0, 386, 387, 371, 96, 105,
	155, 266, 204, 130, 372, 373, 254, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 99, 106, 112, 118, 122, 126, 129,
	135, 139, 142, 144, 145, 146, 149, 160, 163, 164,
	165, 166, 176, 177, 178, 180, 183, 184, 185, 186,
	187, 190, 192, 193, 194, 195, 196, 197, 205, 208,
	214, 215, 216, 217, 218, 219, 220, 222, 223, 224,
	225, 231, 234, 240, 241, 251, 258, 261, 137, 248,
	262, 182, 0, 374, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	377, 156, 0, 0, 229, 170, 0, 0, 0, 0,
	0, 365, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 93, 94, 95, 352, 351, 354,
	355, 356, 357, 0, 0, 115, 353, 358, 359, 360,
	0, 0, 0, 0, 0, 345, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 343, 0,
	0, 0, 0, 391, 0, 344, 0, 0, 337, 338,
	340, 339, 341, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 390, 0, 0, 287, 0, 0,
	388, 0, 201, 0, 233, 138, 153, 111, 150, 97,
	107, 0, 136, 179, 209, 213, 0, 0, 0, 119,
	0, 211, 189, 250, 0, 191, 210, 157, 239, 202,
	249, 259, 260, 236, 257, 265, 226, 100, 235, 247,
	116, 221, 0, 0, 0, 102, 245, 232, 168, 147,
	148, 101, 0, 207, 124, 132, 121, 181, 242, 243,
	120, 268, 108, 256, 104, 109, 255, 175, 238, 246,
	169, 162, 103, 244, 167, 161, 152, 128, 140, 199,
	159, 200, 141, 172, 171, 173, 0, 0, 0, 230,
	253, 269, 113, 0, 237, 263, 264, 0, 203, 114,
	133, 127, 198, 131, 174, 110, 143, 227, 151, 158,
	206, 267, 188, 212, 117, 252, 228, 378, 389, 384,
	385, 382, 383, 381, 380, 379, 392, 367, 368, 369,
	370, 375, 0, 386, 387, 371, 96, 105, 155, 266,
	204, 130, 372, 373, 254, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 99, 106, 112, 118, 122, 126, 129, 135, 139,
	142, 144, 145, 146, 149, 160, 163, 164, 165, 166,
	176, 177, 178, 180, 183, 184, 185, 186, 187, 190,
	192, 193, 194, 195, 196, 197, 205, 208, 214, 215,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 231,
	234, 240, 241, 251, 258, 261, 137, 248, 262, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 93, 94, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 654, 664, 665, 657, 658, 659, 660, 661,
	662, 663, 656, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 287, 0, 0, 0, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 105, 155, 266, 204, 130,
	0, 0, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 156, 0, 0,
	229, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 94, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	87, 88, 0, 84, 0, 0, 0, 89, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 0, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 105, 155, 266, 204, 130, 0, 0,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 182, 0, 0, 0, 1026,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 156, 0, 0, 229, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 94,
	95, 0, 1028, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 287, 0, 0, 0, 0, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	0, 0, 0, 119, 0, 211, 189, 250, 0, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 0, 0, 230, 253, 269, 113, 0, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 105, 155, 266, 204, 130, 0, 0, 254, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 30, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 156, 0, 0, 229, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 93, 94,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 287, 0, 0, 0, 0, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	0, 0, 0, 119, 0, 211, 189, 250, 0, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 0, 0, 230, 253, 269, 113, 0, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 105, 155, 266, 204, 130, 0, 0, 254, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 182, 0, 0, 0, 1026, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 156, 0, 0, 229, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 93, 94, 95, 0,
	1028, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 287,
	0, 0, 0, 0, 201, 0, 233, 138, 153, 111,
	150, 97, 107, 0, 136, 179, 209, 213, 0, 0,
	0, 119, 0, 211, 189, 250, 0, 1024, 210, 157,
	239, 202, 249, 259, 260, 236, 257, 265, 226, 100,
	235, 247, 116, 221, 0, 0, 0, 102, 245, 232,
	168, 147, 148, 101, 0, 207, 124, 132, 121, 181,
	242, 243, 120, 268, 108, 256, 104, 109, 255, 175,
	238, 246, 169, 162, 103, 244, 167, 161, 152, 128,
	140, 199, 159, 200, 141, 172, 171, 173, 0, 0,
	0, 230, 253, 269, 113, 0, 237, 263, 264, 0,
	203, 114, 133, 127, 198, 131, 174, 110, 143, 227,
	151, 158, 206, 267, 188, 212, 117, 252, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 105,
	155, 266, 204, 130, 0, 0, 254, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 99, 106, 112, 118, 122, 126, 129,
	135, 139, 142, 144, 145, 146, 149, 160, 163, 164,
	165, 166, 176, 177, 178, 180, 183, 184, 185, 186,
	187, 190, 192, 193, 194, 195, 196, 197, 205, 208,
	214, 215, 216, 217, 218, 219, 220, 222, 223, 224,
	225, 231, 234, 240, 241, 251, 258, 261, 137, 248,
	262, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 156, 0, 0, 229, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 94, 95, 0, 0, 992,
	0, 0, 993, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 287, 0, 0,
	0, 0, 201, 0, 233, 138, 153, 111, 150, 97,
	107, 0, 136, 179, 209, 213, 0, 0, 0, 119,
	0, 211, 189, 250, 0, 191, 210, 157, 239, 202,
	249, 259, 260, 236, 257, 265, 226, 100, 235, 247,
	116, 221, 0, 0, 0, 102, 245, 232, 168, 147,
	148, 101, 0, 207, 124, 132, 121, 181, 242, 243,
	120, 268, 108, 256, 104, 109, 255, 175, 238, 246,
	169, 162, 103, 244, 167, 161, 152, 128, 140, 199,
	159, 200, 141, 172, 171, 173, 0, 0, 0, 230,
	253, 269, 113, 0, 237, 263, 264, 0, 203, 114,
	133, 127, 198, 131, 174, 110, 143, 227, 151, 158,
	206, 267, 188, 212, 117, 252, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 105, 155, 266,
	204, 130, 0, 0, 254, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 99, 106, 112, 118, 122, 126, 129, 135, 139,
	142, 144, 145, 146, 149, 160, 163, 164, 165, 166,
	176, 177, 178, 180, 183, 184, 185, 186, 187, 190,
	192, 193, 194, 195, 196, 197, 205, 208, 214, 215,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 231,
	234, 240, 241, 251, 258, 261, 137, 248, 262, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	790, 0, 0, 0, 154, 0, 0, 0, 0, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 93, 94, 95, 0, 789, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 287, 0, 0, 0, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 105, 155, 266, 204, 130,
	0, 0, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 156, 0, 0,
	229, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	93, 94, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 287, 0, 0, 0, 0, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 105, 155, 266, 204, 130, 0, 0,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 156, 0, 0, 229, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 93, 94,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 287, 0, 0, 0, 0, 201, 0, 233, 138,
	153, 111, 150, 97, 107, 0, 136, 179, 209, 213,
	0, 0, 0, 119, 0, 211, 189, 250, 0, 191,
	210, 157, 239, 202, 249, 259, 260, 236, 257, 265,
	226, 100, 235, 247, 116, 221, 0, 0, 0, 102,
	245, 232, 168, 147, 148, 101, 0, 207, 124, 132,
	121, 181, 242, 243, 120, 268, 108, 256, 104, 109,
	255, 175, 238, 246, 169, 162, 103, 244, 167, 161,
	152, 128, 140, 199, 159, 200, 141, 172, 171, 173,
	0, 0, 0, 230, 253, 269, 113, 0, 237, 263,
	264, 0, 203, 114, 133, 127, 198, 131, 174, 110,
	143, 227, 151, 158, 206, 267, 188, 212, 117, 252,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 105, 155, 266, 204, 130, 0, 0, 254, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 99, 106, 112, 118, 122,
	126, 129, 135, 139, 142, 144, 145, 146, 149, 160,
	163, 164, 165, 166, 176, 177, 178, 180, 183, 184,
	185, 186, 187, 190, 192, 193, 194, 195, 196, 197,
	205, 208, 214, 215, 216, 217, 218, 219, 220, 222,
	223, 224, 225, 231, 234, 240, 241, 251, 258, 261,
	137, 248, 262, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 156, 0, 0, 229, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 93, 94, 95, 0,
	1028, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 287,
	0, 0, 0, 0, 201, 0, 233, 138, 153, 111,
	150, 97, 107, 0, 136, 179, 209, 213, 0, 0,
	0, 119, 0, 211, 189, 250, 0, 191, 210, 157,
	239, 202, 249, 259, 260, 236, 257, 265, 226, 100,
	235, 247, 116, 221, 0, 0, 0, 102, 245, 232,
	168, 147, 148, 101, 0, 207, 124, 132, 121, 181,
	242, 243, 120, 268, 108, 256, 104, 109, 255, 175,
	238, 246, 169, 162, 103, 244, 167, 161, 152, 128,
	140, 199, 159, 200, 141, 172, 171, 173, 0, 0,
	0, 230, 253, 269, 113, 0, 237, 263, 264, 0,
	203, 114, 133, 127, 198, 131, 174, 110, 143, 227,
	151, 158, 206, 267, 188, 212, 117, 252, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 105,
	155, 266, 204, 130, 0, 0, 254, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 99, 106, 112, 118, 122, 126, 129,
	135, 139, 142, 144, 145, 146, 149, 160, 163, 164,
	165, 166, 176, 177, 178, 180, 183, 184, 185, 186,
	187, 190, 192, 193, 194, 195, 196, 197, 205, 208,
	214, 215, 216, 217, 218, 219, 220, 222, 223, 224,
	225, 231, 234, 240, 241, 251, 258, 261, 137, 248,
	262, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 156, 0, 0, 229, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 94, 95, 0, 757, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 287, 0, 0,
	0, 0, 201, 0, 233, 138, 153, 111, 150, 97,
	107, 0, 136, 179, 209, 213, 0, 0, 0, 119,
	0, 211, 189, 250, 0, 191, 210, 157, 239, 202,
	249, 259, 260, 236, 257, 265, 226, 100, 235, 247,
	116, 221, 0, 0, 0, 102, 245, 232, 168, 147,
	148, 101, 0, 207, 124, 132, 121, 181, 242, 243,
	120, 268, 108, 256, 104, 109, 255, 175, 238, 246,
	169, 162, 103, 244, 167, 161, 152, 128, 140, 199,
	159, 200, 141, 172, 171, 173, 0, 0, 0, 230,
	253, 269, 113, 0, 237, 263, 264, 0, 203, 114,
	133, 127, 198, 131, 174, 110, 143, 227, 151, 158,
	206, 267, 188, 212, 117, 252, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 105, 155, 266,
	204, 130, 0, 0, 254, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 99, 106, 112, 118, 122, 126, 129, 135, 139,
	142, 144, 145, 146, 149, 160, 163, 164, 165, 166,
	176, 177, 178, 180, 183, 184, 185, 186, 187, 190,
	192, 193, 194, 195, 196, 197, 205, 208, 214, 215,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 231,
	234, 240, 241, 251, 258, 261, 137, 248, 262, 182,
	0, 0, 0, 0, 0, 0, 0, 760, 125, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 156,
	0, 0, 229, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 93, 94, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 287, 0, 0, 0, 0,
	201, 0, 233, 138, 153, 111, 150, 97, 107, 0,
	136, 179, 209, 213, 0, 0, 0, 119, 0, 211,
	189, 250, 0, 191, 210, 157, 239, 202, 249, 259,
	260, 236, 257, 265, 226, 100, 235, 247, 116, 221,
	0, 0, 0, 102, 245, 232, 168, 147, 148, 101,
	0, 207, 124, 132, 121, 181, 242, 243, 120, 268,
	108, 256, 104, 109, 255, 175, 238, 246, 169, 162,
	103, 244, 167, 161, 152, 128, 140, 199, 159, 200,
	141, 172, 171, 173, 0, 0, 0, 230, 253, 269,
	113, 0, 237, 263, 264, 0, 203, 114, 133, 127,
	198, 131, 174, 110, 143, 227, 151, 158, 206, 267,
	188, 212, 117, 252, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 105, 155, 266, 204, 130,
	0, 0, 254, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 99,
	106, 112, 118, 122, 126, 129, 135, 139, 142, 144,
	145, 146, 149, 160, 163, 164, 165, 166, 176, 177,
	178, 180, 183, 184, 185, 186, 187, 190, 192, 193,
	194, 195, 196, 197, 205, 208, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 231, 234, 240,
	241, 251, 258, 261, 137, 248, 262, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 156, 0, 0,
	229, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 94, 95, 0, 633, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 287, 0, 0, 0, 0, 201, 0,
	233, 138, 153, 111, 150, 97, 107, 0, 136, 179,
	209, 213, 0, 0, 0, 119, 0, 211, 189, 250,
	0, 191, 210, 157, 239, 202, 249, 259, 260, 236,
	257, 265, 226, 100, 235, 247, 116, 221, 0, 0,
	0, 102, 245, 232, 168, 147, 148, 101, 0, 207,
	124, 132, 121, 181, 242, 243, 120, 268, 108, 256,
	104, 109, 255, 175, 238, 246, 169, 162, 103, 244,
	167, 161, 152, 128, 140, 199, 159, 200, 141, 172,
	171, 173, 0, 0, 0, 230, 253, 269, 113, 0,
	237, 263, 264, 0, 203, 114, 133, 127, 198, 131,
	174, 110, 143, 227, 151, 158, 206, 267, 188, 212,
	117, 252, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 105, 155, 266, 204, 130, 0, 0,
	254, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 99, 106, 112,
	118, 122, 126, 129, 135, 139, 142, 144, 145, 146,
	149, 160, 163, 164, 165, 166, 176, 177, 178, 180,
	183, 184, 185, 186, 187, 190, 192, 193, 194, 195,
	196, 197, 205, 208, 214, 215, 216, 217, 218, 219,
	220, 222, 223, 224, 225, 231, 234, 240, 241, 251,
	258, 261, 137, 248, 262, 425, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 156, 0, 0, 229, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 94, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 287, 0,
	0, 0, 0, 201, 0, 233, 138, 153, 111, 150,
	97, 107, 0, 136, 179, 209, 213, 0, 0, 0,
	119, 0, 211, 189, 250, 0, 191, 210, 157, 239,
	202, 249, 259, 260, 236, 257, 265, 226, 100, 235,
	247, 116, 221, 0, 0, 0, 102, 245, 232, 168,
	147, 148, 101, 0, 207, 124, 132, 121, 181, 242,
	243, 120, 268, 108, 256, 104, 109, 255, 175, 238,
	246, 169, 162, 103, 244, 167, 161, 152, 128, 140,
	199, 159, 200, 141, 172, 171, 173, 0, 0, 0,
	230, 253, 269, 113, 0, 237, 263, 264, 0, 203,
	114, 133, 127, 198, 131, 174, 110, 143, 227, 151,
	158, 206, 267, 188, 212, 117, 252, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 105, 155,
	266, 204, 130, 0, 0, 254, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 99, 106, 112, 118, 122, 126, 129, 135,
	139, 142, 144, 145, 146, 149, 160, 163, 164, 165,
	166, 176, 177, 178, 180, 183, 184, 185, 186, 187,
	190, 192, 193, 194, 195, 196, 197, 205, 208, 214,
	215, 216, 217, 218, 219, 220, 222, 223, 224, 225,
	231, 234, 240, 241, 251, 258, 261, 137, 248, 262,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	156, 0, 0, 229, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 94, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 134, 0, 0, 0, 287, 0, 0, 0,
	0, 201, 0, 233, 138, 153, 111, 150, 97, 107,
	0, 136, 179, 209, 213, 0, 0, 0, 119, 0,
	211, 189, 250, 0, 191, 210, 157, 239, 202, 249,
	259, 260, 236, 257, 265, 226, 100, 235, 247, 116,
	221, 0, 0, 0, 102, 245, 232, 168, 147, 148,
	101, 0, 207, 124, 132, 121, 181, 242, 243, 120,
	268, 108, 256, 104, 109, 255, 175, 238, 246, 169,
	162, 103, 244, 167, 161, 152, 128, 140, 199, 159,
	200, 141, 172, 171, 173, 0, 0, 0, 230, 253,
	269, 113, 0, 237, 263, 264, 0, 203, 114, 133,
	127, 198, 131, 174, 110, 143, 227, 151, 158, 206,
	267, 188, 212, 117, 252, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 105, 155, 266, 204,
	130, 0, 0, 254, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	99, 106, 112, 118, 122, 126, 129, 135, 139, 142,
	144, 145, 146, 149, 160, 163, 164, 165, 166, 176,
	177, 178, 180, 183, 184, 185, 186, 187, 190, 192,
	193, 194, 195, 196, 197, 205, 208, 214, 215, 216,
	217, 218, 219, 220, 222, 223, 224, 225, 231, 234,
	240, 241, 251, 258, 261, 318, 248, 262, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 156, 0,
	0, 229, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 94, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 282, 0, 287, 0, 0, 0, 0, 201,
	0, 233, 138, 153, 111, 150, 97, 107, 0, 136,
	179, 209, 213, 0, 0, 0, 119, 0, 211, 189,
	250, 0, 191, 210, 157, 239, 202, 249, 259, 260,
	236, 257, 265, 226, 100, 235, 247, 116, 221, 0,
	0, 0, 102, 245, 232, 168, 147, 148, 101, 0,
	207, 124, 132, 121, 181, 242, 243, 120, 268, 108,
	256, 104, 109, 255, 175, 238, 246, 169, 162, 103,
	244, 167, 161, 152, 128, 140, 199, 159, 200, 141,
	172, 171, 173, 0, 0, 0, 230, 253, 269, 113,
	0, 237, 263, 264, 0, 203, 114, 133, 127, 198,
	131, 174, 110, 143, 227, 151, 158, 206, 267, 188,
	212, 117, 252, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 105, 155, 266, 204, 130, 0,
	0, 254, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 99, 106,
	112, 118, 122, 126, 129, 135, 139, 142, 144, 145,
	146, 149, 160, 163, 164, 165, 166, 176, 177, 178,
	180, 183, 184, 185, 186, 187, 190, 192, 193, 194,
	195, 196, 197, 205, 208, 214, 215, 216, 217, 218,
	219, 220, 222, 223, 224, 225, 231, 234, 240, 241,
	251, 258, 261, 137, 248, 262, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 156, 0, 0, 229,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	94, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 287, 0, 0, 0, 0, 201, 0, 233,
	138, 153, 111, 150, 97, 107, 0, 136, 179, 209,
	213, 0, 0, 0, 119, 0, 211, 189, 250, 0,
	191, 210, 157, 239, 202, 249, 259, 260, 236, 257,
	265, 226, 100, 235, 247, 116, 221, 0, 0, 0,
	102, 245, 232, 168, 147, 148, 101, 0, 207, 124,
	132, 121, 181, 242, 243, 120, 268, 108, 256, 104,
	109, 255, 175, 238, 246, 169, 162, 103, 244, 167,
	161, 152, 128, 140, 199, 159, 200, 141, 172, 171,
	173, 0, 0, 0, 230, 253, 269, 113, 0, 237,
	263, 264, 0, 203, 114, 133, 127, 198, 131, 174,
	110, 143, 227, 151, 158, 206, 267, 188, 212, 117,
	252, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 105, 155, 266, 204, 130, 0, 0, 254,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 99, 106, 112, 118,
	122, 126, 129, 135, 139, 142, 144, 145, 146, 149,
	160, 163, 164, 165, 166, 176, 177, 178, 180, 183,
	184, 185, 186, 187, 190, 192, 193, 194, 195, 196,
	197, 205, 208, 214, 215, 216, 217, 218, 219, 220,
	222, 223, 224, 225, 231, 234, 240, 241, 251, 258,
	261, 137, 248, 262,
}

var yyPact = [...]int{
	1682, -1000, -273, 997, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 957, 786,
	-1000, -1000, -1000, -1000, -1000, -1000, 301, 12059, 23, 136,
	15, 16950, 135, 167, 17298, -1000, 26, -1000, 17, 17298,
	24, 16602, -1000, -1000, -81, -87, -1000, 10319, 608, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 779, 939, 944,
	955, 606, 948, -1000, 8915, 107, 107, 16254, 7523, -1000,
	-1000, 547, 17298, 132, 17298, -149, 105, 105, 105, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	134, 17298, 552, 552, 241, -1000, 17298, 94, 552, 94,
	94, 94, 17298, -1000, 188, -1000, -1000, -1000, 17298, 552,
	891, 326, 67, 4996, -1000, 208, -1000, 4996, 40, 4996,
	-40, 964, 34, -27, -1000, 4996, -1000, -1000, -1000, -1000,
	-1000, -1000, 123, -1000, -1000, 17298, 15899, 131, 304, -1000,
	-1000, -1000, -1000, -1000, -1000, 605, 372, -1000, 10319, 1786,
	739, 739, -1000, -1000, 153, -1000, -1000, 11363, 11363, 11363,
	11363, 11363, 11363, 11363, 11363, 11363, 11363, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 739, 187, -1000, 9971, 739, 739, 739, 739, 739,
	739, 739, 739, 739, 739, 739, 10319, 739, 739, 739,
	739, 739, 739, 739, 739, 739, 739, 739, 739, 739,
	739, 739, 739, -1000, -1000, 739, -1000, -1000, 957, -1000,
	786, -1000, -1000, -1000, 910, 10319, 10319, 957, -1000, 853,
	8915, -1000, -1000, 906, -1000, -1000, -1000, -1000, 366, 983,
	-1000, 3679, 181, 15551, 14507, 17298, 751, 746, -1000, -1000,
	175, 732, 7162, -111, -1000, -1000, -1000, 290, 13811, -1000,
	-1000, -1000, 885, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 695, 17298, -1000, 338, -1000,
	552, 4996, 126, 552, 331, 552, 17298, 17298, 4996, 4996,
	4996, 46, 80, 74, 17298, 731, 122, 17298, 934, 809,
	17298, 552, 552, -1000, 6440, -1000, 4996, 326, -1000, 525,
	10319, 4996, 4996, 4996, 17298, 4996, 4996, -1000, -1000, -1000,
	318, -1000, -1000, -1000, -1000, 4996, 4996, -1000, 978, 309,
	-1000, -1000, -1000, -1000, 10319, 233, -1000, 808, -1000, 21,
	-1000, -1000, -1000, -1000, -1000, 997, -1000, -1000, -1000, -120,
	-1000, -1000, 10319, 10319, 10319, 10319, 558, 232, 11363, 517,
	275, 11363, 11363, 11363, 11363, 11363, 11363, 11363, 11363, 11363,
	11363, 11363, 11363, 11363, 11363, 11363, 608, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 552, -1000, 995, 615, 615,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 11711,
	7871, 6440, 606, 691, 957, 8915, 8915, 10319, 10319, 9611,
	9263, 8915, -1000, -1000, -1000, 889, 319, 372, 17298, -1000,
	-1000, 11015, -1000, -1000, -1000, -1000, -1000, 536, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17298, 17298, 8915, 8915, 8915,
	8915, 8915, -1000, 10319, 944, 606, 906, -1000, 991, 189,
	576, 730, -1000, 544, 944, 13463, 761, -1000, 906, -1000,
	-1000, -1000, 17298, -1000, -1000, 15203, -1000, -1000, 6079, 62,
	17298, -1000, 693, 851, -1000, -1000, -1000, 936, 12767, 13115,
	62, 725, 14507, 17298, -1000, -1000, 14507, 17298, 5718, 6801,
	-111, -1000, 712, -1000, -124, -116, 8219, 190, -1000, -1000,
	-1000, -1000, 4635, 600, 590, 346, -67, -1000, -1000, -1000,
	743, -1000, 743, 743, 743, 743, -15, -15, -15, -15,
	-1000, -1000, -1000, -1000, -1000, 774, 771, -1000, 743, 743,
	743, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 770,
	770, 770, 758, 758, 778, -1000, 17298, 4996, 933, 4996,
	-1000, 90, -1000, -1000, -1000, 17298, 17298, 17298, 17298, 17298,
	184, 17298, 17298, 728, -1000, 17298, 4996, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 372, -1000, -1000, -1000, -1000,
	-1000, -1000, 17298, -1000, -1000, -1000, -1000, 17298, 326, 17298,
	17298, 372, -1000, 524, 17298, 17298, -1000, -1000, -1000, -1000,
	-1000, 372, 232, 265, 246, -1000, -1000, 490, -1000, -1000,
	2033, -1000, -1000, -1000, -1000, 517, 11363, 11363, 11363, 281,
	2033, 2171, 1253, 931, 197, 381, 381, 213, 213, 213,
	213, 213, 350, 350, -1000, 536, -1000, -1000, -1000, 536,
	8915, 8915, 727, 739, 174, -1000, 779, -1000, -1000, 944,
	677, 677, 504, 420, 312, 977, 677, 307, 972, 677,
	677, 8915, -1000, -1000, 455, -1000, 10319, 536, -1000, 166,
	-1000, 1535, 724, 717, 677, 536, 536, 677, 677, 910,
	-1000, -1000, 848, 10319, 10319, 10319, -1000, -1000, -1000, 910,
	951, -1000, 868, 857, 963, 8915, 14507, 906, -1000, -1000,
	-1000, 160, 710, 739, -1000, 17298, 14507, 14507, 14507, 14507,
	14507, -1000, 835, 834, -1000, 828, 827, 860, 17298, -1000,
	684, 606, 12767, 183, 739, -1000, 14855, -1000, -1000, 963,
	14507, 634, -1000, 634, -1000, 159, -1000, -1000, 712, -111,
	-92, -1000, -1000, -1000, -1000, 372, -1000, 636, 699, 4274,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 764, 552, -1000,
	911, 231, 223, 552, 907, -1000, -1000, -1000, 895, -1000,
	354, -72, -1000, -1000, 453, -15, -15, -1000, -1000, 190,
	884, 190, 190, 190, 521, 521, -1000, -1000, -1000, -1000,
	431, -1000, -1000, -1000, 430, -1000, 805, 17298, 4996, -1000,
	-1000, -1000, -1000, 1093, 1093, 227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60, 752, -1000,
	-1000, -1000, -1000, 8, 45, 115, -1000, 4996, -1000, 309,
	309, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 281, 2033, 2012, -1000, 11363, 11363, -1000, -1000, 677,
	677, 8915, 6440, 957, 910, -1000, -1000, 108, 608, 108,
	11363, 11363, -1000, 11363, 11363, -1000, -162, 748, 315, -1000,
	10319, 563, -1000, 6440, -1000, 11363, 11363, -1000, -1000, -1000,
	-1000, -1000, -1000, 842, 372, 372, -1000, -1000, 17298, -1000,
	-1000, -1000, -1000, 961, 10319, -1000, 675, -1000, 5357, 795,
	17298, 739, 997, 12767, 17298, 666, -1000, 277, 851, 768,
	789, 1370, -1000, -1000, -1000, -1000, 831, -1000, 830, -1000,
	-1000, -1000, -1000, -1000, 606, -1000, 130, 129, 128, 17298,
	-1000, 957, 634, -1000, -1000, 209, -1000, -1000, -130, -131,
	-1000, -1000, -1000, 4635, -1000, 4635, 17298, 76, -1000, 552,
	552, -1000, -1000, -1000, 760, 783, 11363, -1000, -1000, -1000,
	561, 190, 190, -1000, 386, -1000, -1000, -1000, 654, -1000,
	651, 671, 649, 17298, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17298, -1000, -1000, -1000, -1000, -1000, 17298,
	-168, 552, 17298, 17298, 17298, 17298, -1000, 326, 326, -1000,
	11363, 2033, 2033, -1000, -1000, 536, -1000, 944, -1000, 536,
	743, 743, -1000, 743, 758, -1000, 743, 5, 743, 1,
	536, 536, 1979, 1956, 1903, 1713, 739, -156, -1000, 372,
	10319, -1000, 1672, 403, -1000, -1000, 959, 950, 372, -1000,
	-1000, 918, 708, 601, -1000, -1000, 8567, 645, 150, 643,
	-1000, 957, 17298, 10319, -1000, -1000, 10319, 756, -1000, 10319,
	-1000, -1000, -1000, 957, 739, 739, 739, 643, 944, -1000,
	-1000, -1000, -1000, 4274, -1000, 632, -1000, 743, -1000, -1000,
	-1000, 17298, -38, 990, 2033, -1000, -1000, -1000, -1000, -1000,
	-15, 508, -15, 399, -1000, 375, 4996, -1000, -1000, -1000,
	-1000, 920, -1000, 6440, -1000, -1000, 742, 776, -1000, -1000,
	-1000, -1000, 2033, -1000, 910, -1000, -1000, 146, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11363, 11363, 11363, 11363,
	11363, 944, 505, 372, 11363, 11363, -1000, 10319, 10319, 903,
	-1000, 739, -1000, 769, 17298, 17298, -1000, 17298, 944, -1000,
	372, 372, 17298, 372, 14159, 17298, 17298, 12407, -1000, 182,
	17298, -1000, 626, -1000, 212, -1000, -77, 190, -1000, 190,
	541, 539, -1000, 739, 641, -1000, 274, 17298, 17298, -1000,
	-1000, -1000, 1535, 1535, 1535, 1535, 64, 536, -1000, 1535,
	1535, 372, 605, 989, -1000, 739, 997, 148, -1000, -1000,
	-1000, 598, 593, -1000, 593, 593, 183, 182, -1000, 552,
	247, 497, -1000, 75, 17298, 359, 902, -1000, 900, -1000,
	-1000, -1000, -1000, -1000, 59, 6440, 4635, 570, -1000, -1000,
	-1000, -1000, -1000, 536, 57, -171, -1000, -1000, -1000, 17298,
	601, 17298, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 374,
	-1000, -1000, 17298, -1000, -1000, 462, -1000, -1000, 566, -1000,
	17298, -1000, -1000, 752, -1000, 840, -166, -181, 577, -1000,
	-1000, 741, -1000, -1000, 59, 856, -168, -1000, 784, -1000,
	17298, -1000, 56, -1000, -169, 559, 53, -173, 782, 739,
	-182, 780, -1000, 968, 10667, -1000, -1000, 970, 205, 205,
	1535, 536, -1000, -1000, -1000, 81, 407, -1000, -1000, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1280, 1278, 62, 67, 68, 1273, 1272, 1271, 101,
	100, 98, 1267, 1266, 1264, 1263, 1262, 1260, 1259, 1258,
	1256, 1254, 1252, 1248, 1245, 1239, 1238, 1229, 1228, 1227,
	1225, 1224, 1223, 91, 1222, 88, 1221, 1213, 1212, 1206,
	1197, 1195, 1193, 1192, 31, 236, 30, 56, 1188, 55,
	1203, 1187, 46, 61, 72, 1186, 28, 1184, 1183, 89,
	1181, 1180, 54, 1176, 1175, 60, 1172, 75, 1168, 12,
	103, 1167, 1166, 1165, 1164, 86, 1873, 1163, 1162, 14,
	1161, 1160, 99, 1158, 74, 15, 11, 18, 20, 1157,
	70, 1152, 6, 1151, 64, 1150, 1149, 1148, 1147, 47,
	1146, 58, 1144, 53, 16, 1143, 35, 84, 27, 21,
	8, 1142, 1141, 19, 69, 51, 65, 1138, 1136, 598,
	1134, 1132, 39, 1131, 1130, 1129, 22, 1125, 95, 378,
	1124, 1123, 1122, 1120, 36, 902, 1865, 37, 87, 1119,
	1118, 1114, 2784, 43, 49, 17, 1112, 1107, 1106, 23,
	115, 57, 1105, 1104, 34, 1103, 1102, 1101, 1100, 1092,
	1088, 1084, 66, 1082, 1074, 1073, 32, 33, 1067, 1066,
	71, 24, 1062, 1061, 1060, 41, 81, 1056, 1055, 48,
	1051, 1049, 25, 1047, 1046, 1030, 1028, 1026, 26, 7,
	1025, 13, 1024, 10, 1022, 29, 1021, 3, 1020, 9,
	1018, 2, 0, 1017, 4, 40, 5, 1016, 1, 1013,
	1005, 1653, 118, 90, 1004, 92,
}

var yyR1 = [...]int{
	0, 209, 210, 210, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	202, 202, 202, 20, 21, 3, 3, 3, 3, 2,
	2, 8, 4, 5, 5, 9, 9, 36, 36, 10,
	11, 11, 11, 11, 213, 213, 59, 59, 60, 60,
	107, 107, 12, 13, 13, 116, 116, 115, 115, 115,
	117, 117, 117, 117, 152, 152, 14, 14, 14, 14,
	14, 14, 14, 204, 204, 203, 201, 201, 200, 200,
	199, 22, 184, 186, 186, 185, 185, 185, 185, 176,
	155, 155, 155, 155, 158, 158, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 157, 157, 157, 157, 157,
	159, 159, 159, 159, 159, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	161, 161, 161, 161, 161, 161, 161, 161, 175, 175,
	162, 162, 170, 170, 171, 171, 171, 168, 168, 169,
	169, 172, 172, 172, 164, 164, 165, 165, 173, 173,
	166, 166, 166, 167, 167, 167, 174, 174, 174, 174,
	174, 163, 163, 177, 177, 194, 194, 193, 193, 193,
	183, 183, 190, 190, 190, 190, 190, 180, 180, 180,
	181, 181, 179, 179, 182, 182, 192, 192, 191, 178,
	178, 195, 195, 195, 195, 207, 208, 206, 206, 206,
	206, 206, 187, 187, 187, 188, 188, 188, 189, 189,
	189, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 198, 196, 196, 197, 197, 16, 23, 23,
	17, 17, 17, 17, 17, 18, 18, 24, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 123, 123, 125, 125, 121,
	121, 124, 124, 122, 122, 122, 126, 126, 126, 127,
	127, 153, 153, 153, 26, 26, 28, 28, 29, 30,
	30, 147, 147, 148, 148, 31, 32, 37, 37, 37,
	37, 37, 37, 39, 39, 39, 7, 7, 7, 7,
	38, 38, 38, 6, 6, 27, 27, 27, 27, 19,
	214, 33, 34, 34, 35, 35, 35, 41, 41, 41,
	40, 40, 40, 46, 46, 48, 48, 48, 48, 48,
	49, 49, 49, 49, 49, 49, 45, 45, 47, 47,
	47, 47, 139, 139, 139, 138, 138, 51, 51, 52,
	52, 53, 53, 54, 54, 54, 91, 68, 68, 106,
	106, 108, 108, 55, 55, 55, 55, 56, 56, 57,
	57, 58, 58, 146, 146, 145, 145, 145, 144, 144,
	61, 61, 61, 63, 62, 62, 62, 62, 64, 64,
	66, 66, 65, 65, 67, 69, 69, 69, 69, 69,
	70, 70, 50, 50, 50, 50, 50, 50, 50, 50,
	120, 120, 72, 72, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 83, 83, 83, 83, 83, 83,
	73, 73, 73, 73, 73, 73, 73, 44, 44, 84,
	84, 84, 90, 85, 85, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 80,
	80, 80, 80, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 215, 215, 82, 81, 81,
	81, 81, 81, 81, 81, 42, 42, 42, 42, 42,
	151, 151, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 95, 95, 43, 43, 93,
	93, 94, 96, 96, 92, 92, 92, 75, 75, 75,
	75, 75, 75, 75, 75, 77, 77, 77, 97, 97,
	98, 98, 99, 99, 100, 100, 101, 102, 102, 102,
	103, 103, 103, 103, 104, 104, 104, 74, 74, 74,
	74, 105, 105, 105, 105, 109, 109, 86, 86, 88,
	88, 87, 89, 110, 110, 113, 111, 111, 111, 114,
	114, 114, 114, 112, 112, 112, 141, 141, 141, 118,
	118, 128, 128, 129, 129, 119, 119, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 131, 131, 131,
	132, 132, 133, 133, 133, 140, 140, 136, 136, 137,
	137, 142, 142, 143, 143, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 211, 212, 149, 150, 150, 150,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 2, 3, 4, 6, 6, 7, 4,
	6, 5, 8, 1, 3, 7, 8, 1, 1, 9,
	8, 7, 6, 6, 1, 1, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 8, 4,
	6, 5, 5, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 4, 2, 4, 1, 3, 3, 3, 8,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 4, 4, 2, 2, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 0,
	1, 0, 1, 2, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 2, 2, 0, 2, 1, 2,
	1, 0, 2, 5, 4, 1, 2, 2, 3, 2,
	0, 1, 2, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 2, 3,
	1, 10, 11, 11, 12, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 6, 7, 7, 7, 7, 4, 5, 4, 4,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 4, 3, 2, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 4, 3, 2, 7,
	2, 3, 4, 3, 7, 5, 4, 2, 4, 4,
	3, 3, 5, 2, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 2, 1,
	3, 1, 1, 1, 3, 3, 3, 3, 7, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 2, 2, 2, 8, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 5,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 2, 3, 3,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -209, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -24, -25, -26, -28, -29,
	-30, -31, -32, -6, -27, -19, -20, -21, -4, -211,
	6, 7, -36, 9, 10, 30, -22, 124, 125, 127,
	126, 160, 128, 153, 54, 174, 175, 177, 178, 179,
	180, -39, 158, 159, 31, 32, 130, 34, 35, 58,
	8, 263, 155, 154, 25, -210, 367, -35, 5, -99,
	15, -3, -33, -214, -33, -33, -33, -33, -33, -184,
	-186, 58, 97, -133, 134, 78, 255, 131, 132, 138,
	-136, -202, -135, 61, 62, 63, 273, 146, 307, 308,
	174, 188, 182, 209, 201, 274, 309, 147, 199, 202,
	242, 144, 310, 229, 236, 72, 177, 251, 311, 156,
	197, 193, 312, 284, 191, 27, 313, 238, 214, 314,
	278, 240, 192, 237, 130, 315, 149, 363, 142, 316,
	215, 219, 317, 243, 318, 319, 320, 186, 187, 321,
	145, 245, 213, 143, 33, 275, 38, 164, 246, 217,
	322, 212, 208, 323, 324, 325, 326, 211, 185, 207,
	42, 221, 220, 222, 241, 204, 327, 328, 329, 150,
	330, 194, 18, 331, 332, 333, 334, 335, 249, 159,
	336, 162, 337, 338, 339, 340, 341, 342, 239, 216,
	218, 139, 166, 235, 277, 343, 247, 190, 344, 151,
	163, 158, 250, 152, 345, 346, 347, 348, 349, 350,
	351, 178, 352, 353, 354, 355, 173, 244, 253, 41,
	226, 356, 184, 141, 357, 175, 170, 231, 205, 165,
	358, 359, 195, 196, 210, 183, 206, 176, 364, 167,
	160, 360, 252, 227, 281, 203, 200, 171, 361, 168,
	169, 362, 365, 232, 233, 172, 276, 248, 198, 228,
	-119, 134, 255, 131, 233, 136, 132, 132, 133, 134,
	255, 131, 132, -65, -142, -202, -135, 134, 132, 115,
	202, 242, 124, 230, 238, -125, 239, 166, -153, 132,
	-121, 229, 232, 233, 172, -202, 240, 244, 243, 234,
	-142, 176, -147, 181, -136, 179, -65, -37, 363, 128,
	-149, -149, 231, 231, -149, -85, -50, -71, 81, -76,
	29, 23, -75, -72, -92, -89, -90, 115, 116, 118,
	117, 119, 104, 105, 112, 82, 120, -80, -78, -79,
	-81, 65, 64, 73, 66, 67, 68, 69, 74, 75,
	76, -136, -142, -87, -211, 48, 49, 264, 265, 266,
	267, 272, 279, 280, 20, 268, 84, 37, 254, 262,
	261, 260, 258, 259, 256, 257, 270, 271, 137, 255,
	131, 110, 263, -202, -135, -151, -202, 65, -5, -4,
	-211, 6, 20, 21, -103, 17, 16, -212, 60, -41,
	-48, 43, 44, -49, 21, 36, 47, 45, -34, -47,
	106, -50, -142, -119, -119, 11, -59, -60, -65, -67,
	-142, -111, -152, 176, -114, 244, 243, -137, -112, -136,
	-134, 242, 202, 241, 129, 282, 80, 22, 24, 224,
	83, 115, 16, 84, 114, 264, 124, 52, 283, 256,
	257, 254, 266, 267, 255, 230, 29, 10, 285, 25,
	154, 21, 36, 108, 126, 87, 88, 157, 23, 155,
	76, 288, 19, 55, 11, 13, 289, 290, 14, 137,
	136, 99, 133, 50, 8, 120, 26, 96, 46, 291,
	28, 292, 293, 294, 295, 48, 97, 17, 258, 259,
	31, 296, 272, 279, 280, 161, 110, 53, 39, 81,
	297, 298, 74, 299, 77, 56, 78, 15, 51, 300,
	301, 302, 303, 98, 127, 263, 49, 304, 131, 6,
	269, 30, 153, 47, 305, 132, 86, 270, 271, 135,
	75, 5, 138, 32, 9, 54, 57, 260, 261, 262,
	37, 85, 12, 306, 79, -185, 97, -176, -202, -65,
	133, -65, 263, -129, 137, -129, -129, 132, -65, -202,
	-202, 124, 126, 129, 56, -23, -65, -128, 137, -202,
	-128, -128, -128, -65, 121, -65, -202, 30, -126, 97,
	12, 255, -202, 166, 132, 167, 134, -150, -211, -137,
	-180, 133, 33, 145, -150, 170, 171, -150, -124, -123,
	236, 237, 231, 235, 12, 171, 231, 169, -150, 135,
	-136, -38, -136, 65, -7, -3, -10, -9, -11, 89,
	-149, -149, 59, 80, 78, 79, 96, -50, -73, 99,
	81, 97, 98, 83, 101, 100, 111, 104, 105, 106,
	107, 108, 109, 110, 102, 103, 114, 89, 90, 91,
	92, 93, 94, 95, -120, -211, -90, -211, 122, 123,
	-76, -76, -76, -76, -76, -76, -76, -76, -76, -76,
	-211, 121, -2, -85, -4, -211, -211, -211, -211, -211,
	-211, -211, -90, -90, -90, -211, -95, -50, -211, -215,
	-82, -211, -215, -82, -215, -82, -215, -211, -215, -82,
	-215, -82, -215, -215, -82, -211, -211, -211, -211, -211,
	-211, -211, -87, -211, -99, -3, -33, -104, 19, 31,
	-50, -100, -101, -50, -99, 39, -45, -47, -49, 43,
	44, 71, 11, -139, -138, 22, -136, 65, 121, -66,
	26, -65, -52, -53, -54, -55, -68, -91, -211, -65,
	-65, -59, -213, 59, 11, 57, -213, 59, 121, 59,
	176, -114, -116, -115, 245, 247, 89, -141, -136, 65,
	29, 30, 60, 59, -65, -155, -158, -160, -159, -161,
	-156, -157, 199, 200, 115, 203, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 30, 156, 195, 196,
	197, 198, 215, 216, 217, 218, 219, 220, 221, 222,
	182, 201, 274, 183, 184, 185, 186, 187, 188, 190,
	191, 192, 193, 194, -202, -150, 134, -202, 81, -202,
	-65, -65, -150, -150, -150, 168, 168, 132, 132, 173,
	-65, 59, 135, -59, 23, 56, -65, -202, -202, -143,
	-142, -134, -150, -126, 65, -50, -150, -150, -150, -65,
	-150, -150, -181, 11, 99, -150, -150, 11, -122, 11,
	99, -50, -127, 97, 56, -148, 179, 213, 364, 365,
	366, -50, -50, -50, -50, -83, 74, 81, 75, 76,
	-76, -84, -87, -90, 70, 99, 97, 98, 83, -76,
	-76, -76, -76, -76, -76, -76, -76, -76, -76, -76,
	-76, -76, -76, -76, -151, -202, -75, -75, -136, -46,
	21, 36, -45, -137, -143, -134, -35, -212, -212, -99,
	-45, -45, -50, -50, -92, 65, -45, -92, 65, -45,
	-45, -40, 21, 36, -93, -94, 85, -92, -136, -142,
	-212, -76, -136, -136, -45, -46, -46, -45, -45, -103,
	-212, 9, 99, 59, 18, 59, -102, 24, 25, -103,
	-77, -136, 66, 69, -51, 59, 11, -49, -65, -138,
	106, -143, -107, 162, -65, 30, 59, -61, -63, -62,
	-64, 46, 50, 52, 47, 48, 49, 53, -146, 22,
	-52, -3, -211, -145, 162, -144, 22, -142, 65, -107,
	57, -52, -65, -52, -67, -142, 106, -114, -116, 59,
	246, 248, 249, 56, 77, -50, -167, 114, -187, -188,
	-189, -137, 65, 66, -176, -177, -178, -190, 148, -195,
	139, 141, 138, -179, 149, 133, 28, 60, -172, 74,
	81, -168, 227, -162, 58, -162, -162, -162, -162, -166,
	202, -166, -166, -166, 58, 58, -162, -162, -162, -170,
	58, -170, -170, -171, 58, -171, -140, 57, -65, -150,
	23, -150, -130, 129, 126, 127, -198, 125, 224, 202,
	72, 29, 15, 264, 162, 281, -202, 163, -65, -65,
	-65, -65, -65, 129, 126, -65, -65, -65, -150, -65,
	-65, -126, -142, -142, 65, -65, -136, 74, 75, 76,
	-84, -76, -76, -76, -44, 157, 80, -212, -212, -45,
	-45, -211, 121, -5, -103, -212, -212, 59, 57, 22,
	11, 11, -212, 11, 11, -212, -212, -45, -96, -94,
	87, -50, -212, 121, -212, 59, 59, -212, -212, -212,
	-212, -212, -104, 41, -50, -50, -101, -104, -118, 19,
	11, 37, 37, -70, 12, -47, -52, -49, 121, -74,
	30, 37, -3, -211, -211, -110, -113, -92, -53, -54,
	-54, -53, -54, 46, 46, 46, 51, 46, 51, 46,
	-62, -142, -212, -212, -3, -69, 54, 136, 55, -211,
	-144, -70, -52, -70, -70, 121, -115, -117, 250, 247,
	253, -202, 65, 59, -189, 89, 58, -202, 28, -179,
	-179, -182, -202, -182, 28, -164, 29, 74, -169, 228,
	66, -166, -166, -167, 30, -167, -167, -167, -175, 65,
	-175, 66, 66, 56, -136, -150, -149, -205, 144, 140,
	148, 149, 142, 61, 62, 63, 133, 28, 139, 141,
	162, 138, -205, -131, -132, 135, 22, 133, 28, 162,
	-204, 57, 168, 224, 168, 135, -150, -122, -122, -44,
	80, -76, -76, -212, -212, -46, -137, -99, -104, -154,
	115, 199, 156, 197, 193, 213, 204, 226, 195, 227,
	-151, -154, -76, -76, -76, -76, 273, -99, 88, -50,
	86, -137, -76, -76, 42, -65, -97, 13, -50, 106,
	-109, 56, -110, -86, -88, -87, -211, -105, -136, -108,
	-136, -70, 59, 89, -57, -56, 56, 57, -58, 56,
	-56, 46, 46, -212, 133, 133, 133, -108, -99, -70,
	247, 251, 252, -188, -189, -192, -191, -136, -195, -182,
	-182, 58, -165, 56, -76, 60, -167, -167, -202, 115,
	60, 59, 60, 59, 60, 59, -65, -149, -149, -65,
	-149, -136, -201, 276, -203, -202, -136, -136, -136, -65,
	-126, -126, -76, -212, -103, -212, -162, -162, -162, -171,
	-162, 187, -162, 187, -212, -212, 19, 19, 19, 19,
	-211, -43, 269, -50, 59, 59, -98, 14, 16, 27,
	-109, 59, -212, -212, 59, 121, -212, 59, -99, -113,
	-50, -50, 58, -50, -211, -211, -211, -212, -103, 60,
	59, -162, -106, -136, -173, 224, 9, -166, 65, -166,
	66, 66, -150, 26, -200, -199, -137, 58, 57, -104,
	-166, -202, -76, -76, -76, -76, -76, -103, 65, -76,
	-76, -50, -85, 28, -88, 37, -3, -136, -136, -136,
	-103, -106, -106, -212, -106, -106, -145, -194, -193, 57,
	143, 72, -191, 60, 59, -174, 139, 28, 138, -79,
	-167, -167, 60, 60, -211, 59, 89, -106, -65, -212,
	-212, -212, -212, -42, 99, 276, -212, -212, -212, 9,
	-86, 121, 60, -212, -212, -212, -69, -193, -202, -183,
	89, 65, 151, -136, -163, 72, 28, 28, -196, -197,
	162, -199, -189, 60, -212, 274, 53, 277, -110, -136,
	66, -65, 65, -212, 59, -136, -204, 42, 275, 278,
	58, -197, 37, -201, 42, -106, 164, 276, 60, 165,
	277, -207, -208, 56, -211, 278, -208, 56, 10, 9,
	-76, 161, -206, 152, 147, 150, 30, -206, -212, -212,
	146, 29, 74,
}

var yyDef = [...]int{
	29, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 622, 0,
	360, 360, 360, 360, 360, 360, 0, 692, 675, 0,
	0, 0, 0, -2, 325, 326, 0, 328, -2, 0,
	0, 337, 1003, 1003, 0, 0, 1003, 0, 0, 1001,
	47, 48, 343, 344, 345, 1, 3, 0, 364, 630,
	0, 0, -2, 362, 0, 675, 675, 0, 0, 76,
	77, 0, 0, 0, 989, 0, 673, 673, 673, 693,
	694, 697, 698, 30, 31, 32, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	0, 0, 0, 0, 0, 676, 0, 671, 0, 671,
	671, 671, 0, 276, 442, 701, 702, 989, 0, 0,
	0, 316, 0, 1004, 288, 0, 290, 1004, 0, 1004,
	0, 297, 0, 0, 303, 1004, 308, 322, 323, 310,
	324, 327, 0, 332, 335, 0, 350, 0, 867, 342,
	355, 356, 1003, 1003, 359, 33, 493, 452, 0, 458,
	460, 0, 495, 496, 497, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 527,
	528, 607, 608, 609, 610, 611, 612, 613, 614, 462,
	463, 604, 0, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 565, 565,
	565, 565, 565, 565, 565, 565, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 580, 581, 622, 43,
	0, 360, 365, 366, 634, 0, 0, 622, 1002, 0,
	0, -2, -2, 376, 382, 383, 384, 385, 361, 0,
	388, 392, 0, 0, 0, 0, 0, 0, 56, 58,
	442, 62, 0, 977, 656, -2, -2, 0, 0, 699,
	700, -2, 839, -2, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 0, 0, 95, 0, 93,
	0, 1004, 0, 0, 0, 0, 0, 0, 1004, 1004,
	1004, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 277, 1004, 316, 280, 0,
	0, 1004, 1004, 1004, 0, 1004, 1004, 287, 1005, 1006,
	0, 197, 198, 199, 291, 1004, 1004, 293, 0, 313,
	311, 312, 305, 306, 0, 319, 300, 301, 304, 333,
	336, 353, 351, 352, 354, 346, 347, 348, 349, 0,
	357, 358, 0, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 459, 0, 473, 0, 0, 0,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	373, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 545, 370, 0, 596, 0, 549,
	557, 0, 550, 558, 551, 559, 552, 0, 553, 560,
	554, 561, 555, 556, 562, 0, 0, 0, 373, 373,
	0, 0, 34, 0, 630, 0, 375, 35, 0, 0,
	631, 623, 624, 627, 630, 0, 397, 386, 377, 380,
	381, 363, 0, 389, 393, 0, 395, 396, 0, 60,
	0, 441, 0, 399, 401, 402, 403, 423, 0, 425,
	-2, 0, 0, 0, 54, 55, 0, 0, 0, 0,
	977, 657, 64, 65, 0, 0, 0, 173, 666, 667,
	668, 664, 222, 0, 0, 161, 157, 101, 102, 103,
	150, 105, 150, 150, 150, 150, 170, 170, 170, 170,
	133, 134, 135, 136, 137, 0, 0, 120, 150, 150,
	150, 124, 140, 141, 142, 143, 144, 145, 146, 147,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 152,
	152, 152, 154, 154, 695, 79, 0, 1004, 0, 1004,
	91, 0, 236, 238, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 672, 0, 1004, 273, 274, 443,
	703, 704, 278, 279, 317, 318, 281, 282, 283, 284,
	285, 286, 0, 200, 201, 292, 296, 0, 316, 0,
	0, 298, 299, 0, 0, 0, 334, 338, 339, 340,
	341, 494, 453, 454, 455, 457, 474, 0, 476, 478,
	464, 465, 489, 490, 491, 0, 0, 0, 0, 487,
	469, 0, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 514, 0, 512, 513, 524, 0,
	0, 0, 374, 605, 0, -2, 0, 492, 651, 630,
	0, 0, 0, 0, 497, 607, 0, 497, 607, 0,
	0, 0, 371, 372, 602, 599, 0, 0, 604, 0,
	566, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	44, 635, 0, 0, 0, 0, 626, 628, 629, 634,
	0, 615, 0, 0, 450, 0, 0, 378, 41, 394,
	390, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 430, 0, 0, 433, 0, 0, 0, 0, 424,
	0, 0, 0, 445, 921, 426, 0, 428, 429, 450,
	0, 450, 57, 450, 59, 0, 444, 658, 63, 0,
	0, 68, 69, 659, 660, 661, 662, 0, 92, 223,
	225, 228, 229, 230, 96, 97, 98, 0, 0, 210,
	0, 0, 204, 204, 0, 202, 203, 94, 164, 162,
	0, 159, 158, 104, 0, 170, 170, 127, 128, 173,
	0, 173, 173, 173, 0, 0, 121, 122, 123, 115,
	0, 116, 117, 118, 0, 119, 0, 0, 1004, 81,
	674, 82, 1003, 0, 0, 687, 237, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 0, 83, 241,
	243, 242, 246, 0, 0, 0, 268, 1004, 272, 313,
	313, 295, 314, 315, 320, 302, 330, 475, 477, 479,
	466, 487, 470, 0, 467, 0, 0, 461, 529, 0,
	0, 373, 0, 622, 634, 533, 534, 0, 0, 0,
	0, 0, 573, 0, 0, 574, 0, 622, 0, 600,
	0, 0, 548, 0, 567, 0, 0, 568, 569, 570,
	571, 572, 37, 0, 632, 633, 625, 36, 0, 669,
	670, 616, 617, 618, 0, 387, 398, 379, 0, 645,
	0, 0, 638, 0, 0, 450, 653, 0, 400, 419,
	421, 0, 416, 431, 432, 434, 0, 436, 0, 438,
	439, 404, 405, 406, 0, 407, 0, 0, 0, 0,
	427, 622, 450, 52, 53, 0, 66, 67, 0, 0,
	73, 174, 175, 0, 226, 0, 0, 0, 192, 204,
	204, 195, 205, 196, 0, 166, 0, 163, 100, 160,
	0, 173, 173, 129, 0, 130, 131, 132, 0, 148,
	0, 0, 0, 0, 696, 80, 231, 1003, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 1003, 0, 1003, 688, 689, 690, 691, 0,
	86, 0, 0, 0, 0, 0, 271, 316, 316, 468,
	0, 488, 471, 530, 531, 0, 606, 630, 39, 0,
	150, 150, 585, 150, 154, 588, 150, 590, 150, 593,
	0, 0, 0, 0, 0, 0, 0, 597, 547, 603,
	0, 605, 0, 0, 636, 38, 620, 0, 451, 391,
	45, 0, 645, 637, 647, 649, 0, 0, 641, 0,
	411, 622, 0, 0, 413, 420, 0, 0, 414, 0,
	415, 435, 437, -2, 0, 0, 0, 0, 630, 51,
	70, 71, 72, 224, 227, 0, 206, 150, 209, 193,
	194, 0, 168, 0, 165, 151, 125, 126, 171, 172,
	170, 0, 170, 0, 155, 0, 1004, 232, 233, 234,
	235, 0, 240, 0, 84, 85, 0, 0, 245, 269,
	289, 294, 472, 532, 634, 535, 582, 170, 586, 587,
	589, 591, 592, 594, 537, 536, 0, 0, 0, 0,
	0, 630, 0, 601, 0, 0, 42, 0, 0, 0,
	46, 0, 650, 0, 0, 0, 61, 0, 630, 654,
	655, 417, 0, 422, 0, 0, 0, 425, 50, 184,
	0, 208, 0, 409, 176, 169, 0, 173, 149, 173,
	0, 0, 78, 0, 87, 88, 0, 0, 0, 40,
	583, 584, 0, 0, 0, 0, 575, 0, 598, 0,
	0, 621, 619, 0, 648, 0, 640, 643, 642, 412,
	49, 0, 0, 447, 0, 0, 445, 183, 185, 0,
	190, 0, 207, 0, 0, 181, 0, 178, 180, 167,
	138, 139, 153, 156, 0, 0, 0, 0, 247, 538,
	540, 539, 541, 0, 0, 0, 546, 563, 564, 0,
	639, 0, 418, 446, 448, 449, 408, 186, 187, 0,
	191, 189, 0, 410, 99, 0, 177, 179, 0, 263,
	0, 89, 90, 83, 542, 0, 0, 0, 646, 644,
	188, 0, 182, 262, 0, 0, 86, 576, 0, 579,
	0, 264, 0, 244, 577, 0, 0, 0, 211, 0,
	0, 212, 213, 0, 0, 578, 214, 0, 0, 0,
	0, 0, 215, 217, 218, 0, 0, 216, 265, 266,
	219, 220, 221,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 109, 101, 3,
	58, 60, 106, 104, 59, 105, 121, 107, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 367,
	90, 89, 91, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 111, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 100, 3, 112,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 102, 103, 108, 110, 113, 114, 115, 116, 117,
	118, 119, 120, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:341
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:346
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:347
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:351
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:379
		{
			setParseTree(yylex, nil)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:385
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:389
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:393
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:399
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:405
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:411
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:419
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:423
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:427
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 39:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:450
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:458
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:464
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:472
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:478
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:482
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:489
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:501
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:513
		{
			yyVAL.str = InsertStr
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:517
		{
			yyVAL.str = ReplaceStr
		}
	case 49:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:523
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:529
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:533
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 52:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:537
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:541
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:546
		{
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:547
		{
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:551
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:555
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:561
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:565
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:570
		{
			yyVAL.partitions = nil
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:574
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:580
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:586
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:590
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:596
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:600
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:606
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:610
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:614
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:620
		{
			yyVAL.str = RepeatableRead
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:624
		{
			yyVAL.str = ReadCommitted
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:628
		{
			yyVAL.str = ReadUncommitted
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:632
		{
			yyVAL.str = Serializable
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:638
		{
			yyVAL.str = SessionStr
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:642
		{
			yyVAL.str = GlobalStr
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:648
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:653
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 78:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:659
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:664
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:668
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:672
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:676
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:681
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:685
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:691
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:696
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:701
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:707
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:712
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:718
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 91:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:724
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:731
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:738
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:742
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:748
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:753
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:757
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:761
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:767
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:778
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:789
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:794
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:989
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:994
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:999
		{
			yyVAL.sqlVal = nil
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1003
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1008
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1012
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1020
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1024
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1030
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1038
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1042
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1047
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1051
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1057
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1061
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1065
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1070
		{
			yyVAL.optVal = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1074
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1079
		{
			yyVAL.optVal = nil
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1083
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1088
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1092
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1097
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1101
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1105
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1110
		{
			yyVAL.str = ""
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1114
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1118
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1123
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1127
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1131
		{
			yyVAL.colKeyOpt = colKey
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1135
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1139
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1144
		{
			yyVAL.sqlVal = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1148
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1154
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1158
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1164
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1168
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1174
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1178
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1183
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1189
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1193
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1199
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1203
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1207
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1211
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1215
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1221
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1225
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1229
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1236
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1240
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1246
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1250
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1255
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1259
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1265
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1269
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1275
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1285
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 211:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:1292
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 212:
		yyDollar = yyS[yypt-11 : yypt+1]
//line .\sql.y:1296
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 213:
		yyDollar = yyS[yypt-11 : yypt+1]
//line .\sql.y:1300
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 214:
		yyDollar = yyS[yypt-12 : yypt+1]
//line .\sql.y:1304
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1310
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1316
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1322
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1326
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1330
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1334
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1338
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1343
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1347
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1351
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1359
		{
			yyVAL.str = yyDollar[1].str
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1363
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1367
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1373
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1377
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1381
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:1387
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1391
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 233:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1395
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1399
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1404
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1409
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1413
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1417
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1421
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1425
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1437
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1447
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1451
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 244:
		yyDollar = yyS[yypt-12 : yypt+1]
//line .\sql.y:1455
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1468
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1478
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 247:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:1482
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1511
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1517
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1521
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 265:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1527
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 266:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1531
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1537
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1543
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1547
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1555
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:1563
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1568
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1576
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1580
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1586
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1590
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1595
		{
			yyVAL.statement = &OtherRead{}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1601
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1606
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1611
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1616
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1621
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1625
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1629
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1633
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1637
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1641
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1645
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1649
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1658
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1662
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1666
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1670
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1675
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1685
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1689
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1693
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1697
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1702
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1706
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1710
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1728
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].colIdent.String())}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1734
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1738
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1744
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1748
		{
			yyVAL.str = "extended "
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1754
		{
			yyVAL.str = ""
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1758
		{
			yyVAL.str = "full "
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1764
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1768
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1774
		{
			yyVAL.str = ""
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1778
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1782
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1788
		{
			yyVAL.showFilter = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1792
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1796
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1802
		{
			yyVAL.showFilter = nil
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1806
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1812
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1816
		{
			yyVAL.str = SessionStr
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1820
		{
			yyVAL.str = GlobalStr
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1826
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1830
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1836
		{
			yyVAL.statement = &Begin{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1840
		{
			yyVAL.statement = &Begin{}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1846
		{
			yyVAL.statement = &Commit{}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1852
		{
			yyVAL.statement = &Rollback{}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1856
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1861
		{
			yyVAL.empty = struct{}{}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1863
		{
			yyVAL.empty = struct{}{}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1866
		{
			yyVAL.empty = struct{}{}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1868
		{
			yyVAL.empty = struct{}{}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1873
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1879
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1884
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1888
		{
			yyVAL.str = JSONStr
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1892
		{
			yyVAL.str = TreeStr
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1896
		{
			yyVAL.str = VitessStr
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1900
		{
			yyVAL.str = TraditionalStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1904
		{
			yyVAL.str = AnalyzeStr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1910
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1914
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1918
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1924
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1928
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1932
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1936
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1941
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1945
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1949
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1955
		{
			yyVAL.statement = &OtherRead{}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1959
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1965
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1969
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1973
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1977
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1983
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1987
		{
			setAllowComments(yylex, true)
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1991
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1997
		{
			yyVAL.bytes2 = nil
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2001
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2007
		{
			yyVAL.str = UnionStr
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2011
		{
			yyVAL.str = UnionAllStr
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2015
		{
			yyVAL.str = UnionDistinctStr
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2020
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2024
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2028
		{
			yyVAL.str = SQLCacheStr
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2033
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2037
		{
			yyVAL.str = DistinctStr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2041
		{
			yyVAL.str = DistinctStr
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2046
		{
			yyVAL.selectExprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2050
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2055
		{
			yyVAL.strs = nil
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2059
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2063
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2067
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2071
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2077
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2081
		{
			yyVAL.str = SQLCacheStr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2085
		{
			yyVAL.str = DistinctStr
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2089
		{
			yyVAL.str = DistinctStr
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2093
		{
			yyVAL.str = StraightJoinHint
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2097
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2103
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2107
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2113
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2117
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2121
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2125
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2130
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2134
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2138
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2145
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2150
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2154
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2160
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2164
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2174
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2178
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2182
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2188
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2194
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:2198
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2204
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2208
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2214
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2218
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2231
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2235
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2239
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2243
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2249
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2251
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2255
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2257
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2261
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2263
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2266
		{
			yyVAL.empty = struct{}{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2268
		{
			yyVAL.empty = struct{}{}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2271
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2275
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2279
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2286
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2292
		{
			yyVAL.str = JoinStr
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2296
		{
			yyVAL.str = JoinStr
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2300
		{
			yyVAL.str = JoinStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2306
		{
			yyVAL.str = StraightJoinStr
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2312
		{
			yyVAL.str = LeftJoinStr
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2316
		{
			yyVAL.str = LeftJoinStr
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2320
		{
			yyVAL.str = RightJoinStr
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2324
		{
			yyVAL.str = RightJoinStr
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2330
		{
			yyVAL.str = NaturalJoinStr
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2334
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2344
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2348
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2354
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2358
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2364
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2369
		{
			yyVAL.indexHints = nil
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2373
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2377
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2381
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2385
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2390
		{
			yyVAL.expr = nil
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2394
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2400
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2404
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2408
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2412
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2416
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2420
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2424
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2428
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2434
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2438
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2444
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2448
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2454
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2458
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2462
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2466
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2470
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2474
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2478
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2482
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2486
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2490
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2496
		{
			yyVAL.str = IsNullStr
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2500
		{
			yyVAL.str = IsNotNullStr
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2504
		{
			yyVAL.str = IsTrueStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2508
		{
			yyVAL.str = IsNotTrueStr
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2512
		{
			yyVAL.str = IsFalseStr
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2516
		{
			yyVAL.str = IsNotFalseStr
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2522
		{
			yyVAL.str = EqualStr
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2526
		{
			yyVAL.str = LessThanStr
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2530
		{
			yyVAL.str = GreaterThanStr
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2534
		{
			yyVAL.str = LessEqualStr
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2538
		{
			yyVAL.str = GreaterEqualStr
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2542
		{
			yyVAL.str = NotEqualStr
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2546
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2551
		{
			yyVAL.expr = nil
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2555
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2561
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2565
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2569
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2575
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2581
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2585
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2591
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2595
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2599
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2603
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2607
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2611
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2615
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2619
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2623
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2627
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2631
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2635
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2639
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2643
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2647
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2651
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2655
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2659
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2663
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2667
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2671
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2675
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2679
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2683
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2687
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2691
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2699
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2713
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2717
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2721
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2739
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2743
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2747
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2751
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2761
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2769
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2773
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2777
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2781
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2785
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2789
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2793
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 542:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:2797
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2801
		{
			yyVAL.expr = &SubqueryFuncExpr{FuncName: "any", Subquery: yyDollar[2].subquery}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2805
		{
			yyVAL.expr = &SubqueryFuncExpr{FuncName: "some", Subquery: yyDollar[2].subquery}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2809
		{
			yyVAL.expr = &SubqueryFuncExpr{FuncName: "all", Subquery: yyDollar[2].subquery}
		}
	case 546:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2813
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2817
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2821
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2865
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2870
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2874
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2878
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2883
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2888
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2893
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2897
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2901
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2911
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2921
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2925
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2929
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2933
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2937
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2941
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2945
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2951
		{
			yyVAL.str = ""
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2955
		{
			yyVAL.str = BooleanModeStr
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2959
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:2963
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2967
		{
			yyVAL.str = QueryExpansionStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2973
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2977
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2983
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2987
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2991
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2995
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2999
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3003
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3009
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3013
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3017
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3021
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3025
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3029
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3033
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3038
		{
			yyVAL.expr = nil
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3042
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3047
		{
			yyVAL.str = string("")
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3051
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3057
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3061
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3067
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3072
		{
			yyVAL.expr = nil
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3076
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3082
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3086
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3090
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3096
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3100
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3104
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3108
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3112
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3116
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3120
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3124
		{
			yyVAL.expr = &NullVal{}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3130
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3139
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3143
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3148
		{
			yyVAL.exprs = nil
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3152
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3157
		{
			yyVAL.expr = nil
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3161
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3166
		{
			yyVAL.orderBy = nil
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3170
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3176
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3180
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3186
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3191
		{
			yyVAL.str = AscScr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3195
		{
			yyVAL.str = AscScr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3199
		{
			yyVAL.str = DescScr
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3204
		{
			yyVAL.limit = nil
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3208
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3212
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3216
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3221
		{
			yyVAL.str = ""
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3225
		{
			yyVAL.str = ForUpdateStr
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3229
		{
			yyVAL.str = ShareModeStr
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3242
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3246
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3250
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3254
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3260
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3264
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3268
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3272
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3277
		{
			yyVAL.updateExprs = nil
		}
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3281
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3287
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3291
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3297
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3301
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3307
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3313
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3323
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3327
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3333
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3339
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3343
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3348
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3354
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3358
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3362
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3366
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3373
		{
			yyVAL.bytes = []byte("charset")
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3380
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3384
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3388
		{
			yyVAL.expr = &Default{}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3397
		{
			yyVAL.byt = 0
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3399
		{
			yyVAL.byt = 1
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3402
		{
			yyVAL.empty = struct{}{}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3404
		{
			yyVAL.empty = struct{}{}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3407
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3409
		{
			yyVAL.str = IgnoreStr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3413
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3415
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3417
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3419
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3421
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3423
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3425
		{
			yyVAL.empty = struct{}{}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3427
		{
			yyVAL.empty = struct{}{}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3429
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3431
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3434
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3436
		{
			yyVAL.empty = struct{}{}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3438
		{
			yyVAL.empty = struct{}{}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3442
		{
			yyVAL.empty = struct{}{}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3444
		{
			yyVAL.empty = struct{}{}
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3447
		{
			yyVAL.empty = struct{}{}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3449
		{
			yyVAL.empty = struct{}{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3451
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3454
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3456
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3460
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3464
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3471
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3477
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3481
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3488
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3810
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3819
		{
			decNesting(yylex)
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3824
		{
			skipToEnd(yylex)
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3829
		{
			skipToEnd(yylex)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3833
		{
			skipToEnd(yylex)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3837
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
